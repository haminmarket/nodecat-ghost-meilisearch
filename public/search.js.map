{"version":3,"file":"search.js","sources":["../../../node_modules/meilisearch/dist/esm/errors/meilisearch-error.js","../../../node_modules/meilisearch/dist/esm/errors/meilisearch-api-error.js","../../../node_modules/meilisearch/dist/esm/errors/meilisearch-request-error.js","../../../node_modules/meilisearch/dist/esm/errors/meilisearch-timeout-error.js","../../../node_modules/meilisearch/dist/esm/errors/version-hint-message.js","../../../node_modules/meilisearch/dist/esm/package-version.js","../../../node_modules/meilisearch/dist/esm/utils.js","../../../node_modules/meilisearch/dist/esm/http-requests.js","../../../node_modules/meilisearch/dist/esm/enqueued-task.js","../../../node_modules/meilisearch/dist/esm/task.js","../../../node_modules/meilisearch/dist/esm/batch.js","../../../node_modules/meilisearch/dist/esm/types.js","../../../node_modules/meilisearch/dist/esm/indexes.js","../../../node_modules/meilisearch/dist/esm/meilisearch.js","../src/search.js"],"sourcesContent":["export class MeiliSearchError extends Error {\n    name = \"MeiliSearchError\";\n    constructor(...params) {\n        super(...params);\n    }\n}\n//# sourceMappingURL=meilisearch-error.js.map","import { MeiliSearchError } from \"./meilisearch-error.js\";\nexport class MeiliSearchApiError extends MeiliSearchError {\n    name = \"MeiliSearchApiError\";\n    cause;\n    response;\n    constructor(response, responseBody) {\n        super(responseBody?.message ?? `${response.status}: ${response.statusText}`);\n        this.response = response;\n        if (responseBody !== undefined) {\n            this.cause = responseBody;\n        }\n    }\n}\n//# sourceMappingURL=meilisearch-api-error.js.map","import { MeiliSearchError } from \"./meilisearch-error.js\";\nexport class MeiliSearchRequestError extends MeiliSearchError {\n    name = \"MeiliSearchRequestError\";\n    constructor(url, cause) {\n        super(`Request to ${url} has failed`, { cause });\n    }\n}\n//# sourceMappingURL=meilisearch-request-error.js.map","import { MeiliSearchError } from \"./meilisearch-error.js\";\nexport class MeiliSearchTimeOutError extends MeiliSearchError {\n    name = \"MeiliSearchTimeOutError\";\n    constructor(message) {\n        super(message);\n    }\n}\n//# sourceMappingURL=meilisearch-timeout-error.js.map","export function versionErrorHintMessage(message, method) {\n    return `${message}\\nHint: It might not be working because maybe you're not up to date with the Meilisearch version that ${method} call requires.`;\n}\n//# sourceMappingURL=version-hint-message.js.map","export const PACKAGE_VERSION = \"0.49.0\";\n//# sourceMappingURL=package-version.js.map","/** Removes undefined entries from object */\nfunction removeUndefinedFromObject(obj) {\n    return Object.entries(obj).reduce((acc, curEntry) => {\n        const [key, val] = curEntry;\n        if (val !== undefined)\n            acc[key] = val;\n        return acc;\n    }, {});\n}\nasync function sleep(ms) {\n    return await new Promise((resolve) => setTimeout(resolve, ms));\n}\nfunction addProtocolIfNotPresent(host) {\n    if (!(host.startsWith(\"https://\") || host.startsWith(\"http://\"))) {\n        return `http://${host}`;\n    }\n    return host;\n}\nfunction addTrailingSlash(url) {\n    if (!url.endsWith(\"/\")) {\n        url += \"/\";\n    }\n    return url;\n}\nexport { sleep, removeUndefinedFromObject, addProtocolIfNotPresent, addTrailingSlash, };\n//# sourceMappingURL=utils.js.map","import { PACKAGE_VERSION } from \"./package-version.js\";\nimport { MeiliSearchError, MeiliSearchApiError, MeiliSearchRequestError, } from \"./errors/index.js\";\nimport { addTrailingSlash, addProtocolIfNotPresent } from \"./utils.js\";\nfunction toQueryParams(parameters) {\n    const params = Object.keys(parameters);\n    const queryParams = params.reduce((acc, key) => {\n        const value = parameters[key];\n        if (value === undefined) {\n            return acc;\n        }\n        else if (Array.isArray(value)) {\n            return { ...acc, [key]: value.join(\",\") };\n        }\n        else if (value instanceof Date) {\n            return { ...acc, [key]: value.toISOString() };\n        }\n        return { ...acc, [key]: value };\n    }, {});\n    return queryParams;\n}\nfunction constructHostURL(host) {\n    try {\n        host = addProtocolIfNotPresent(host);\n        host = addTrailingSlash(host);\n        return host;\n    }\n    catch {\n        throw new MeiliSearchError(\"The provided host is not valid.\");\n    }\n}\nfunction cloneAndParseHeaders(headers) {\n    if (Array.isArray(headers)) {\n        return headers.reduce((acc, headerPair) => {\n            acc[headerPair[0]] = headerPair[1];\n            return acc;\n        }, {});\n    }\n    else if (\"has\" in headers) {\n        const clonedHeaders = {};\n        headers.forEach((value, key) => (clonedHeaders[key] = value));\n        return clonedHeaders;\n    }\n    else {\n        return Object.assign({}, headers);\n    }\n}\nfunction createHeaders(config) {\n    const agentHeader = \"X-Meilisearch-Client\";\n    const packageAgent = `Meilisearch JavaScript (v${PACKAGE_VERSION})`;\n    const contentType = \"Content-Type\";\n    const authorization = \"Authorization\";\n    const headers = cloneAndParseHeaders(config.requestConfig?.headers ?? {});\n    // do not override if user provided the header\n    if (config.apiKey && !headers[authorization]) {\n        headers[authorization] = `Bearer ${config.apiKey}`;\n    }\n    if (!headers[contentType]) {\n        headers[\"Content-Type\"] = \"application/json\";\n    }\n    // Creates the custom user agent with information on the package used.\n    if (config.clientAgents && Array.isArray(config.clientAgents)) {\n        const clients = config.clientAgents.concat(packageAgent);\n        headers[agentHeader] = clients.join(\" ; \");\n    }\n    else if (config.clientAgents && !Array.isArray(config.clientAgents)) {\n        // If the header is defined but not an array\n        throw new MeiliSearchError(`Meilisearch: The header \"${agentHeader}\" should be an array of string(s).\\n`);\n    }\n    else {\n        headers[agentHeader] = packageAgent;\n    }\n    return headers;\n}\nclass HttpRequests {\n    headers;\n    url;\n    requestConfig;\n    httpClient;\n    requestTimeout;\n    constructor(config) {\n        this.headers = createHeaders(config);\n        this.requestConfig = config.requestConfig;\n        this.httpClient = config.httpClient;\n        this.requestTimeout = config.timeout;\n        try {\n            const host = constructHostURL(config.host);\n            this.url = new URL(host);\n        }\n        catch {\n            throw new MeiliSearchError(\"The provided host is not valid.\");\n        }\n    }\n    async request({ method, url, params, body, config = {}, }) {\n        const constructURL = new URL(url, this.url);\n        if (params) {\n            const queryParams = new URLSearchParams();\n            Object.keys(params)\n                .filter((x) => params[x] !== null)\n                .map((x) => queryParams.set(x, params[x]));\n            constructURL.search = queryParams.toString();\n        }\n        // in case a custom content-type is provided\n        // do not stringify body\n        if (!config.headers?.[\"Content-Type\"]) {\n            body = JSON.stringify(body);\n        }\n        const headers = { ...this.headers, ...config.headers };\n        const responsePromise = this.fetchWithTimeout(constructURL.toString(), {\n            ...config,\n            ...this.requestConfig,\n            method,\n            body,\n            headers,\n        }, this.requestTimeout);\n        const response = await responsePromise.catch((error) => {\n            throw new MeiliSearchRequestError(constructURL.toString(), error);\n        });\n        // When using a custom HTTP client, the response is returned to allow the user to parse/handle it as they see fit\n        if (this.httpClient !== undefined) {\n            return response;\n        }\n        const responseBody = await response.text();\n        const parsedResponse = responseBody === \"\" ? undefined : JSON.parse(responseBody);\n        if (!response.ok) {\n            throw new MeiliSearchApiError(response, parsedResponse);\n        }\n        return parsedResponse;\n    }\n    async fetchWithTimeout(url, options, timeout) {\n        return new Promise((resolve, reject) => {\n            const fetchFn = this.httpClient ? this.httpClient : fetch;\n            const fetchPromise = fetchFn(url, options);\n            const promises = [fetchPromise];\n            // TimeoutPromise will not run if undefined or zero\n            let timeoutId;\n            if (timeout) {\n                const timeoutPromise = new Promise((_, reject) => {\n                    timeoutId = setTimeout(() => {\n                        reject(new Error(\"Error: Request Timed Out\"));\n                    }, timeout);\n                });\n                promises.push(timeoutPromise);\n            }\n            Promise.race(promises)\n                .then(resolve)\n                .catch(reject)\n                .finally(() => {\n                clearTimeout(timeoutId);\n            });\n        });\n    }\n    async get(url, params, config) {\n        return await this.request({\n            method: \"GET\",\n            url,\n            params,\n            config,\n        });\n    }\n    async post(url, data, params, config) {\n        return await this.request({\n            method: \"POST\",\n            url,\n            body: data,\n            params,\n            config,\n        });\n    }\n    async put(url, data, params, config) {\n        return await this.request({\n            method: \"PUT\",\n            url,\n            body: data,\n            params,\n            config,\n        });\n    }\n    async patch(url, data, params, config) {\n        return await this.request({\n            method: \"PATCH\",\n            url,\n            body: data,\n            params,\n            config,\n        });\n    }\n    async delete(url, data, params, config) {\n        return await this.request({\n            method: \"DELETE\",\n            url,\n            body: data,\n            params,\n            config,\n        });\n    }\n}\nexport { HttpRequests, toQueryParams };\n//# sourceMappingURL=http-requests.js.map","class EnqueuedTask {\n    taskUid;\n    indexUid;\n    status;\n    type;\n    enqueuedAt;\n    constructor(task) {\n        this.taskUid = task.taskUid;\n        this.indexUid = task.indexUid;\n        this.status = task.status;\n        this.type = task.type;\n        this.enqueuedAt = new Date(task.enqueuedAt);\n    }\n}\nexport { EnqueuedTask };\n//# sourceMappingURL=enqueued-task.js.map","import { MeiliSearchTimeOutError } from \"./errors/index.js\";\nimport { TaskStatus } from \"./types.js\";\nimport { HttpRequests, toQueryParams } from \"./http-requests.js\";\nimport { sleep } from \"./utils.js\";\nimport { EnqueuedTask } from \"./enqueued-task.js\";\nclass Task {\n    indexUid;\n    status;\n    type;\n    uid;\n    batchUid;\n    canceledBy;\n    details;\n    error;\n    duration;\n    startedAt;\n    enqueuedAt;\n    finishedAt;\n    constructor(task) {\n        this.indexUid = task.indexUid;\n        this.status = task.status;\n        this.type = task.type;\n        this.uid = task.uid;\n        this.batchUid = task.batchUid;\n        this.details = task.details;\n        this.canceledBy = task.canceledBy;\n        this.error = task.error;\n        this.duration = task.duration;\n        this.startedAt = new Date(task.startedAt);\n        this.enqueuedAt = new Date(task.enqueuedAt);\n        this.finishedAt = new Date(task.finishedAt);\n    }\n}\nclass TaskClient {\n    httpRequest;\n    constructor(config) {\n        this.httpRequest = new HttpRequests(config);\n    }\n    /**\n     * Get one task\n     *\n     * @param uid - Unique identifier of the task\n     * @returns\n     */\n    async getTask(uid) {\n        const url = `tasks/${uid}`;\n        const taskItem = await this.httpRequest.get(url);\n        return new Task(taskItem);\n    }\n    /**\n     * Get tasks\n     *\n     * @param parameters - Parameters to browse the tasks\n     * @returns Promise containing all tasks\n     */\n    async getTasks(parameters = {}) {\n        const url = `tasks`;\n        const tasks = await this.httpRequest.get(url, toQueryParams(parameters));\n        return {\n            ...tasks,\n            results: tasks.results.map((task) => new Task(task)),\n        };\n    }\n    /**\n     * Wait for a task to be processed.\n     *\n     * @param taskUid - Task identifier\n     * @param options - Additional configuration options\n     * @returns Promise returning a task after it has been processed\n     */\n    async waitForTask(taskUid, { timeOutMs = 5000, intervalMs = 50 } = {}) {\n        const startingTime = Date.now();\n        while (Date.now() - startingTime < timeOutMs) {\n            const response = await this.getTask(taskUid);\n            if (![\n                TaskStatus.TASK_ENQUEUED,\n                TaskStatus.TASK_PROCESSING,\n            ].includes(response.status))\n                return response;\n            await sleep(intervalMs);\n        }\n        throw new MeiliSearchTimeOutError(`timeout of ${timeOutMs}ms has exceeded on process ${taskUid} when waiting a task to be resolved.`);\n    }\n    /**\n     * Waits for multiple tasks to be processed\n     *\n     * @param taskUids - Tasks identifier list\n     * @param options - Wait options\n     * @returns Promise returning a list of tasks after they have been processed\n     */\n    async waitForTasks(taskUids, { timeOutMs = 5000, intervalMs = 50 } = {}) {\n        const tasks = [];\n        for (const taskUid of taskUids) {\n            const task = await this.waitForTask(taskUid, {\n                timeOutMs,\n                intervalMs,\n            });\n            tasks.push(task);\n        }\n        return tasks;\n    }\n    /**\n     * Cancel a list of enqueued or processing tasks.\n     *\n     * @param parameters - Parameters to filter the tasks.\n     * @returns Promise containing an EnqueuedTask\n     */\n    async cancelTasks(parameters = {}) {\n        const url = `tasks/cancel`;\n        const task = await this.httpRequest.post(url, {}, toQueryParams(parameters));\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Delete a list tasks.\n     *\n     * @param parameters - Parameters to filter the tasks.\n     * @returns Promise containing an EnqueuedTask\n     */\n    async deleteTasks(parameters = {}) {\n        const url = `tasks`;\n        const task = await this.httpRequest.delete(url, {}, toQueryParams(parameters));\n        return new EnqueuedTask(task);\n    }\n}\nexport { TaskClient, Task };\n//# sourceMappingURL=task.js.map","import { HttpRequests, toQueryParams } from \"./http-requests.js\";\nclass Batch {\n    uid;\n    details;\n    stats;\n    startedAt;\n    finishedAt;\n    duration;\n    progress;\n    constructor(batch) {\n        this.uid = batch.uid;\n        this.details = batch.details;\n        this.stats = batch.stats;\n        this.startedAt = batch.startedAt;\n        this.finishedAt = batch.finishedAt;\n        this.duration = batch.duration;\n        this.progress = batch.progress;\n    }\n}\nclass BatchClient {\n    httpRequest;\n    constructor(config) {\n        this.httpRequest = new HttpRequests(config);\n    }\n    /**\n     * Get one batch\n     *\n     * @param uid - Unique identifier of the batch\n     * @returns\n     */\n    async getBatch(uid) {\n        const url = `batches/${uid}`;\n        const batch = await this.httpRequest.get(url);\n        return new Batch(batch);\n    }\n    /**\n     * Get batches\n     *\n     * @param parameters - Parameters to browse the batches\n     * @returns Promise containing all batches\n     */\n    async getBatches(parameters = {}) {\n        const url = `batches`;\n        const batches = await this.httpRequest.get(url, toQueryParams(parameters));\n        return {\n            ...batches,\n            results: batches.results.map((batch) => new Batch(batch)),\n        };\n    }\n}\nexport { BatchClient, Batch };\n//# sourceMappingURL=batch.js.map","// Type definitions for meilisearch\n// Project: https://github.com/meilisearch/meilisearch-js\n// Definitions by: qdequele <quentin@meilisearch.com> <https://github.com/meilisearch>\n// Definitions: https://github.com/meilisearch/meilisearch-js\n// TypeScript Version: ^3.8.3\nimport { Task } from \"./task.js\";\nimport { Batch } from \"./batch.js\";\n/*\n * SEARCH PARAMETERS\n */\nexport const MatchingStrategies = {\n    ALL: \"all\",\n    LAST: \"last\",\n    FREQUENCY: \"frequency\",\n};\nexport const ContentTypeEnum = {\n    JSON: \"application/json\",\n    CSV: \"text/csv\",\n    NDJSON: \"application/x-ndjson\",\n};\n/*\n ** TASKS\n */\nexport const TaskStatus = {\n    TASK_SUCCEEDED: \"succeeded\",\n    TASK_PROCESSING: \"processing\",\n    TASK_FAILED: \"failed\",\n    TASK_ENQUEUED: \"enqueued\",\n    TASK_CANCELED: \"canceled\",\n};\nexport const TaskTypes = {\n    DOCUMENTS_ADDITION_OR_UPDATE: \"documentAdditionOrUpdate\",\n    DOCUMENT_DELETION: \"documentDeletion\",\n    DUMP_CREATION: \"dumpCreation\",\n    INDEX_CREATION: \"indexCreation\",\n    INDEX_DELETION: \"indexDeletion\",\n    INDEXES_SWAP: \"indexSwap\",\n    INDEX_UPDATE: \"indexUpdate\",\n    SETTINGS_UPDATE: \"settingsUpdate\",\n    SNAPSHOT_CREATION: \"snapshotCreation\",\n    TASK_CANCELATION: \"taskCancelation\",\n    TASK_DELETION: \"taskDeletion\",\n};\n// @TODO: This doesn't seem to be up to date, and its usefullness comes into question.\nexport const ErrorStatusCode = {\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#index_creation_failed */\n    INDEX_CREATION_FAILED: \"index_creation_failed\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_index_uid */\n    MISSING_INDEX_UID: \"missing_index_uid\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#index_already_exists */\n    INDEX_ALREADY_EXISTS: \"index_already_exists\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#index_not_found */\n    INDEX_NOT_FOUND: \"index_not_found\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_index_uid */\n    INVALID_INDEX_UID: \"invalid_index_uid\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#index_not_accessible */\n    INDEX_NOT_ACCESSIBLE: \"index_not_accessible\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_index_offset */\n    INVALID_INDEX_OFFSET: \"invalid_index_offset\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_index_limit */\n    INVALID_INDEX_LIMIT: \"invalid_index_limit\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_state */\n    INVALID_STATE: \"invalid_state\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#primary_key_inference_failed */\n    PRIMARY_KEY_INFERENCE_FAILED: \"primary_key_inference_failed\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#index_primary_key_already_exists */\n    INDEX_PRIMARY_KEY_ALREADY_EXISTS: \"index_primary_key_already_exists\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_index_primary_key */\n    INVALID_INDEX_PRIMARY_KEY: \"invalid_index_primary_key\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#max_fields_limit_exceeded */\n    DOCUMENTS_FIELDS_LIMIT_REACHED: \"document_fields_limit_reached\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_document_id */\n    MISSING_DOCUMENT_ID: \"missing_document_id\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_document_id */\n    INVALID_DOCUMENT_ID: \"invalid_document_id\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_content_type */\n    INVALID_CONTENT_TYPE: \"invalid_content_type\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_content_type */\n    MISSING_CONTENT_TYPE: \"missing_content_type\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_document_fields */\n    INVALID_DOCUMENT_FIELDS: \"invalid_document_fields\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_document_limit */\n    INVALID_DOCUMENT_LIMIT: \"invalid_document_limit\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_document_offset */\n    INVALID_DOCUMENT_OFFSET: \"invalid_document_offset\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_document_filter */\n    INVALID_DOCUMENT_FILTER: \"invalid_document_filter\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_document_filter */\n    MISSING_DOCUMENT_FILTER: \"missing_document_filter\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_document_vectors_field */\n    INVALID_DOCUMENT_VECTORS_FIELD: \"invalid_document_vectors_field\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#payload_too_large */\n    PAYLOAD_TOO_LARGE: \"payload_too_large\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_payload */\n    MISSING_PAYLOAD: \"missing_payload\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#malformed_payload */\n    MALFORMED_PAYLOAD: \"malformed_payload\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#no_space_left_on_device */\n    NO_SPACE_LEFT_ON_DEVICE: \"no_space_left_on_device\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_store_file */\n    INVALID_STORE_FILE: \"invalid_store_file\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_ranking_rules */\n    INVALID_RANKING_RULES: \"missing_document_id\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_request */\n    INVALID_REQUEST: \"invalid_request\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_document_geo_field */\n    INVALID_DOCUMENT_GEO_FIELD: \"invalid_document_geo_field\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_q */\n    INVALID_SEARCH_Q: \"invalid_search_q\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_offset */\n    INVALID_SEARCH_OFFSET: \"invalid_search_offset\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_limit */\n    INVALID_SEARCH_LIMIT: \"invalid_search_limit\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_page */\n    INVALID_SEARCH_PAGE: \"invalid_search_page\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_hits_per_page */\n    INVALID_SEARCH_HITS_PER_PAGE: \"invalid_search_hits_per_page\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_attributes_to_retrieve */\n    INVALID_SEARCH_ATTRIBUTES_TO_RETRIEVE: \"invalid_search_attributes_to_retrieve\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_attributes_to_crop */\n    INVALID_SEARCH_ATTRIBUTES_TO_CROP: \"invalid_search_attributes_to_crop\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_crop_length */\n    INVALID_SEARCH_CROP_LENGTH: \"invalid_search_crop_length\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_attributes_to_highlight */\n    INVALID_SEARCH_ATTRIBUTES_TO_HIGHLIGHT: \"invalid_search_attributes_to_highlight\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_show_matches_position */\n    INVALID_SEARCH_SHOW_MATCHES_POSITION: \"invalid_search_show_matches_position\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_filter */\n    INVALID_SEARCH_FILTER: \"invalid_search_filter\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_sort */\n    INVALID_SEARCH_SORT: \"invalid_search_sort\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_facets */\n    INVALID_SEARCH_FACETS: \"invalid_search_facets\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_highlight_pre_tag */\n    INVALID_SEARCH_HIGHLIGHT_PRE_TAG: \"invalid_search_highlight_pre_tag\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_highlight_post_tag */\n    INVALID_SEARCH_HIGHLIGHT_POST_TAG: \"invalid_search_highlight_post_tag\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_crop_marker */\n    INVALID_SEARCH_CROP_MARKER: \"invalid_search_crop_marker\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_matching_strategy */\n    INVALID_SEARCH_MATCHING_STRATEGY: \"invalid_search_matching_strategy\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_vector */\n    INVALID_SEARCH_VECTOR: \"invalid_search_vector\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_attributes_to_search_on */\n    INVALID_SEARCH_ATTRIBUTES_TO_SEARCH_ON: \"invalid_search_attributes_to_search_on\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#bad_request */\n    BAD_REQUEST: \"bad_request\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#document_not_found */\n    DOCUMENT_NOT_FOUND: \"document_not_found\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#internal */\n    INTERNAL: \"internal\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_api_key */\n    INVALID_API_KEY: \"invalid_api_key\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_api_key_description */\n    INVALID_API_KEY_DESCRIPTION: \"invalid_api_key_description\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_api_key_actions */\n    INVALID_API_KEY_ACTIONS: \"invalid_api_key_actions\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_api_key_indexes */\n    INVALID_API_KEY_INDEXES: \"invalid_api_key_indexes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_api_key_expires_at */\n    INVALID_API_KEY_EXPIRES_AT: \"invalid_api_key_expires_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#api_key_not_found */\n    API_KEY_NOT_FOUND: \"api_key_not_found\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#immutable_api_key_uid */\n    IMMUTABLE_API_KEY_UID: \"immutable_api_key_uid\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#immutable_api_key_actions */\n    IMMUTABLE_API_KEY_ACTIONS: \"immutable_api_key_actions\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#immutable_api_key_indexes */\n    IMMUTABLE_API_KEY_INDEXES: \"immutable_api_key_indexes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#immutable_api_key_expires_at */\n    IMMUTABLE_API_KEY_EXPIRES_AT: \"immutable_api_key_expires_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#immutable_api_key_created_at */\n    IMMUTABLE_API_KEY_CREATED_AT: \"immutable_api_key_created_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#immutable_api_key_updated_at */\n    IMMUTABLE_API_KEY_UPDATED_AT: \"immutable_api_key_updated_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_authorization_header */\n    MISSING_AUTHORIZATION_HEADER: \"missing_authorization_header\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#unretrievable_document */\n    UNRETRIEVABLE_DOCUMENT: \"unretrievable_document\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#database_size_limit_reached */\n    MAX_DATABASE_SIZE_LIMIT_REACHED: \"database_size_limit_reached\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#task_not_found */\n    TASK_NOT_FOUND: \"task_not_found\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#dump_process_failed */\n    DUMP_PROCESS_FAILED: \"dump_process_failed\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#dump_not_found */\n    DUMP_NOT_FOUND: \"dump_not_found\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_swap_duplicate_index_found */\n    INVALID_SWAP_DUPLICATE_INDEX_FOUND: \"invalid_swap_duplicate_index_found\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_swap_indexes */\n    INVALID_SWAP_INDEXES: \"invalid_swap_indexes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_swap_indexes */\n    MISSING_SWAP_INDEXES: \"missing_swap_indexes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_master_key */\n    MISSING_MASTER_KEY: \"missing_master_key\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_types */\n    INVALID_TASK_TYPES: \"invalid_task_types\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_uids */\n    INVALID_TASK_UIDS: \"invalid_task_uids\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_statuses */\n    INVALID_TASK_STATUSES: \"invalid_task_statuses\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_limit */\n    INVALID_TASK_LIMIT: \"invalid_task_limit\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_from */\n    INVALID_TASK_FROM: \"invalid_task_from\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_canceled_by */\n    INVALID_TASK_CANCELED_BY: \"invalid_task_canceled_by\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_task_filters */\n    MISSING_TASK_FILTERS: \"missing_task_filters\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#too_many_open_files */\n    TOO_MANY_OPEN_FILES: \"too_many_open_files\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#io_error */\n    IO_ERROR: \"io_error\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_index_uids */\n    INVALID_TASK_INDEX_UIDS: \"invalid_task_index_uids\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#immutable_index_uid */\n    IMMUTABLE_INDEX_UID: \"immutable_index_uid\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#immutable_index_created_at */\n    IMMUTABLE_INDEX_CREATED_AT: \"immutable_index_created_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#immutable_index_updated_at */\n    IMMUTABLE_INDEX_UPDATED_AT: \"immutable_index_updated_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_displayed_attributes */\n    INVALID_SETTINGS_DISPLAYED_ATTRIBUTES: \"invalid_settings_displayed_attributes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_searchable_attributes */\n    INVALID_SETTINGS_SEARCHABLE_ATTRIBUTES: \"invalid_settings_searchable_attributes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_filterable_attributes */\n    INVALID_SETTINGS_FILTERABLE_ATTRIBUTES: \"invalid_settings_filterable_attributes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_sortable_attributes */\n    INVALID_SETTINGS_SORTABLE_ATTRIBUTES: \"invalid_settings_sortable_attributes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_ranking_rules */\n    INVALID_SETTINGS_RANKING_RULES: \"invalid_settings_ranking_rules\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_stop_words */\n    INVALID_SETTINGS_STOP_WORDS: \"invalid_settings_stop_words\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_synonyms */\n    INVALID_SETTINGS_SYNONYMS: \"invalid_settings_synonyms\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_distinct_attribute */\n    INVALID_SETTINGS_DISTINCT_ATTRIBUTE: \"invalid_settings_distinct_attribute\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_typo_tolerance */\n    INVALID_SETTINGS_TYPO_TOLERANCE: \"invalid_settings_typo_tolerance\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_faceting */\n    INVALID_SETTINGS_FACETING: \"invalid_settings_faceting\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_pagination */\n    INVALID_SETTINGS_PAGINATION: \"invalid_settings_pagination\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_search_cutoff_ms */\n    INVALID_SETTINGS_SEARCH_CUTOFF_MS: \"invalid_settings_search_cutoff_ms\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_settings_search_cutoff_ms */\n    INVALID_SETTINGS_LOCALIZED_ATTRIBUTES: \"invalid_settings_localized_attributes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_before_enqueued_at */\n    INVALID_TASK_BEFORE_ENQUEUED_AT: \"invalid_task_before_enqueued_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_after_enqueued_at */\n    INVALID_TASK_AFTER_ENQUEUED_AT: \"invalid_task_after_enqueued_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_before_started_at */\n    INVALID_TASK_BEFORE_STARTED_AT: \"invalid_task_before_started_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_after_started_at */\n    INVALID_TASK_AFTER_STARTED_AT: \"invalid_task_after_started_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_before_finished_at */\n    INVALID_TASK_BEFORE_FINISHED_AT: \"invalid_task_before_finished_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_task_after_finished_at */\n    INVALID_TASK_AFTER_FINISHED_AT: \"invalid_task_after_finished_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_api_key_actions */\n    MISSING_API_KEY_ACTIONS: \"missing_api_key_actions\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_api_key_indexes */\n    MISSING_API_KEY_INDEXES: \"missing_api_key_indexes\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_api_key_expires_at */\n    MISSING_API_KEY_EXPIRES_AT: \"missing_api_key_expires_at\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_api_key_limit */\n    INVALID_API_KEY_LIMIT: \"invalid_api_key_limit\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_api_key_offset */\n    INVALID_API_KEY_OFFSET: \"invalid_api_key_offset\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_facet_search_facet_name */\n    INVALID_FACET_SEARCH_FACET_NAME: \"invalid_facet_search_facet_name\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#missing_facet_search_facet_name */\n    MISSING_FACET_SEARCH_FACET_NAME: \"missing_facet_search_facet_name\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_facet_search_facet_query */\n    INVALID_FACET_SEARCH_FACET_QUERY: \"invalid_facet_search_facet_query\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_search_ranking_score_threshold */\n    INVALID_SEARCH_RANKING_SCORE_THRESHOLD: \"invalid_search_ranking_score_threshold\",\n    /** @see https://www.meilisearch.com/docs/reference/errors/error_codes#invalid_similar_ranking_score_threshold */\n    INVALID_SIMILAR_RANKING_SCORE_THRESHOLD: \"invalid_similar_ranking_score_threshold\",\n};\n//# sourceMappingURL=types.js.map","/*\n * Bundle: MeiliSearch / Indexes\n * Project: MeiliSearch - Javascript API\n * Author: Quentin de Quelen <quentin@meilisearch.com>\n * Copyright: 2019, MeiliSearch\n */\nimport { MeiliSearchError, MeiliSearchRequestError, versionErrorHintMessage, MeiliSearchApiError, } from \"./errors/index.js\";\nimport { removeUndefinedFromObject } from \"./utils.js\";\nimport { HttpRequests } from \"./http-requests.js\";\nimport { Task, TaskClient } from \"./task.js\";\nimport { EnqueuedTask } from \"./enqueued-task.js\";\nclass Index {\n    uid;\n    primaryKey;\n    createdAt;\n    updatedAt;\n    httpRequest;\n    tasks;\n    /**\n     * @param config - Request configuration options\n     * @param uid - UID of the index\n     * @param primaryKey - Primary Key of the index\n     */\n    constructor(config, uid, primaryKey) {\n        this.uid = uid;\n        this.primaryKey = primaryKey;\n        this.httpRequest = new HttpRequests(config);\n        this.tasks = new TaskClient(config);\n    }\n    ///\n    /// SEARCH\n    ///\n    /**\n     * Search for documents into an index\n     *\n     * @param query - Query string\n     * @param options - Search options\n     * @param config - Additional request configuration options\n     * @returns Promise containing the search response\n     */\n    async search(query, options, config) {\n        const url = `indexes/${this.uid}/search`;\n        return await this.httpRequest.post(url, removeUndefinedFromObject({ q: query, ...options }), undefined, config);\n    }\n    /**\n     * Search for documents into an index using the GET method\n     *\n     * @param query - Query string\n     * @param options - Search options\n     * @param config - Additional request configuration options\n     * @returns Promise containing the search response\n     */\n    async searchGet(query, options, config) {\n        const url = `indexes/${this.uid}/search`;\n        const parseFilter = (filter) => {\n            if (typeof filter === \"string\")\n                return filter;\n            else if (Array.isArray(filter))\n                throw new MeiliSearchError(\"The filter query parameter should be in string format when using searchGet\");\n            else\n                return undefined;\n        };\n        const getParams = {\n            q: query,\n            ...options,\n            filter: parseFilter(options?.filter),\n            sort: options?.sort?.join(\",\"),\n            facets: options?.facets?.join(\",\"),\n            attributesToRetrieve: options?.attributesToRetrieve?.join(\",\"),\n            attributesToCrop: options?.attributesToCrop?.join(\",\"),\n            attributesToHighlight: options?.attributesToHighlight?.join(\",\"),\n            vector: options?.vector?.join(\",\"),\n            attributesToSearchOn: options?.attributesToSearchOn?.join(\",\"),\n        };\n        return await this.httpRequest.get(url, removeUndefinedFromObject(getParams), config);\n    }\n    /**\n     * Search for facet values\n     *\n     * @param params - Parameters used to search on the facets\n     * @param config - Additional request configuration options\n     * @returns Promise containing the search response\n     */\n    async searchForFacetValues(params, config) {\n        const url = `indexes/${this.uid}/facet-search`;\n        return await this.httpRequest.post(url, removeUndefinedFromObject(params), undefined, config);\n    }\n    /**\n     * Search for similar documents\n     *\n     * @param params - Parameters used to search for similar documents\n     * @returns Promise containing the search response\n     */\n    async searchSimilarDocuments(params) {\n        const url = `indexes/${this.uid}/similar`;\n        return await this.httpRequest.post(url, removeUndefinedFromObject(params), undefined);\n    }\n    ///\n    /// INDEX\n    ///\n    /**\n     * Get index information.\n     *\n     * @returns Promise containing index information\n     */\n    async getRawInfo() {\n        const url = `indexes/${this.uid}`;\n        const res = await this.httpRequest.get(url);\n        this.primaryKey = res.primaryKey;\n        this.updatedAt = new Date(res.updatedAt);\n        this.createdAt = new Date(res.createdAt);\n        return res;\n    }\n    /**\n     * Fetch and update Index information.\n     *\n     * @returns Promise to the current Index object with updated information\n     */\n    async fetchInfo() {\n        await this.getRawInfo();\n        return this;\n    }\n    /**\n     * Get Primary Key.\n     *\n     * @returns Promise containing the Primary Key of the index\n     */\n    async fetchPrimaryKey() {\n        this.primaryKey = (await this.getRawInfo()).primaryKey;\n        return this.primaryKey;\n    }\n    /**\n     * Create an index.\n     *\n     * @param uid - Unique identifier of the Index\n     * @param options - Index options\n     * @param config - Request configuration options\n     * @returns Newly created Index object\n     */\n    static async create(uid, options = {}, config) {\n        const url = `indexes`;\n        const req = new HttpRequests(config);\n        const task = await req.post(url, { ...options, uid });\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Update an index.\n     *\n     * @param data - Data to update\n     * @returns Promise to the current Index object with updated information\n     */\n    async update(data) {\n        const url = `indexes/${this.uid}`;\n        const task = await this.httpRequest.patch(url, data);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    /**\n     * Delete an index.\n     *\n     * @returns Promise which resolves when index is deleted successfully\n     */\n    async delete() {\n        const url = `indexes/${this.uid}`;\n        const task = await this.httpRequest.delete(url);\n        return new EnqueuedTask(task);\n    }\n    ///\n    /// TASKS\n    ///\n    /**\n     * Get the list of all the tasks of the index.\n     *\n     * @param parameters - Parameters to browse the tasks\n     * @returns Promise containing all tasks\n     */\n    async getTasks(parameters = {}) {\n        return await this.tasks.getTasks({ ...parameters, indexUids: [this.uid] });\n    }\n    /**\n     * Get one task of the index.\n     *\n     * @param taskUid - Task identifier\n     * @returns Promise containing a task\n     */\n    async getTask(taskUid) {\n        return await this.tasks.getTask(taskUid);\n    }\n    /**\n     * Wait for multiple tasks to be processed.\n     *\n     * @param taskUids - Tasks identifier\n     * @param waitOptions - Options on timeout and interval\n     * @returns Promise containing an array of tasks\n     */\n    async waitForTasks(taskUids, { timeOutMs = 5000, intervalMs = 50 } = {}) {\n        return await this.tasks.waitForTasks(taskUids, {\n            timeOutMs,\n            intervalMs,\n        });\n    }\n    /**\n     * Wait for a task to be processed.\n     *\n     * @param taskUid - Task identifier\n     * @param waitOptions - Options on timeout and interval\n     * @returns Promise containing an array of tasks\n     */\n    async waitForTask(taskUid, { timeOutMs = 5000, intervalMs = 50 } = {}) {\n        return await this.tasks.waitForTask(taskUid, {\n            timeOutMs,\n            intervalMs,\n        });\n    }\n    ///\n    /// STATS\n    ///\n    /**\n     * Get stats of an index\n     *\n     * @returns Promise containing object with stats of the index\n     */\n    async getStats() {\n        const url = `indexes/${this.uid}/stats`;\n        return await this.httpRequest.get(url);\n    }\n    ///\n    /// DOCUMENTS\n    ///\n    /**\n     * Get documents of an index.\n     *\n     * @param parameters - Parameters to browse the documents. Parameters can\n     *   contain the `filter` field only available in Meilisearch v1.2 and newer\n     * @returns Promise containing the returned documents\n     */\n    async getDocuments(parameters = {}) {\n        parameters = removeUndefinedFromObject(parameters);\n        // In case `filter` is provided, use `POST /documents/fetch`\n        if (parameters.filter !== undefined) {\n            try {\n                const url = `indexes/${this.uid}/documents/fetch`;\n                return await this.httpRequest.post(url, parameters);\n            }\n            catch (e) {\n                if (e instanceof MeiliSearchRequestError) {\n                    e.message = versionErrorHintMessage(e.message, \"getDocuments\");\n                }\n                else if (e instanceof MeiliSearchApiError) {\n                    e.message = versionErrorHintMessage(e.message, \"getDocuments\");\n                }\n                throw e;\n            }\n            // Else use `GET /documents` method\n        }\n        else {\n            const url = `indexes/${this.uid}/documents`;\n            // Transform fields to query parameter string format\n            const fields = Array.isArray(parameters?.fields)\n                ? { fields: parameters?.fields?.join(\",\") }\n                : {};\n            return await this.httpRequest.get(url, {\n                ...parameters,\n                ...fields,\n            });\n        }\n    }\n    /**\n     * Get one document\n     *\n     * @param documentId - Document ID\n     * @param parameters - Parameters applied on a document\n     * @returns Promise containing Document response\n     */\n    async getDocument(documentId, parameters) {\n        const url = `indexes/${this.uid}/documents/${documentId}`;\n        const fields = (() => {\n            if (Array.isArray(parameters?.fields)) {\n                return parameters?.fields?.join(\",\");\n            }\n            return undefined;\n        })();\n        return await this.httpRequest.get(url, removeUndefinedFromObject({\n            ...parameters,\n            fields,\n        }));\n    }\n    /**\n     * Add or replace multiples documents to an index\n     *\n     * @param documents - Array of Document objects to add/replace\n     * @param options - Options on document addition\n     * @returns Promise containing an EnqueuedTask\n     */\n    async addDocuments(documents, options) {\n        const url = `indexes/${this.uid}/documents`;\n        const task = await this.httpRequest.post(url, documents, options);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Add or replace multiples documents in a string format to an index. It only\n     * supports csv, ndjson and json formats.\n     *\n     * @param documents - Documents provided in a string to add/replace\n     * @param contentType - Content type of your document:\n     *   'text/csv'|'application/x-ndjson'|'application/json'\n     * @param options - Options on document addition\n     * @returns Promise containing an EnqueuedTask\n     */\n    async addDocumentsFromString(documents, contentType, queryParams) {\n        const url = `indexes/${this.uid}/documents`;\n        const task = await this.httpRequest.post(url, documents, queryParams, {\n            headers: {\n                \"Content-Type\": contentType,\n            },\n        });\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Add or replace multiples documents to an index in batches\n     *\n     * @param documents - Array of Document objects to add/replace\n     * @param batchSize - Size of the batch\n     * @param options - Options on document addition\n     * @returns Promise containing array of enqueued task objects for each batch\n     */\n    async addDocumentsInBatches(documents, batchSize = 1000, options) {\n        const updates = [];\n        for (let i = 0; i < documents.length; i += batchSize) {\n            updates.push(await this.addDocuments(documents.slice(i, i + batchSize), options));\n        }\n        return updates;\n    }\n    /**\n     * Add or update multiples documents to an index\n     *\n     * @param documents - Array of Document objects to add/update\n     * @param options - Options on document update\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateDocuments(documents, options) {\n        const url = `indexes/${this.uid}/documents`;\n        const task = await this.httpRequest.put(url, documents, options);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Add or update multiples documents to an index in batches\n     *\n     * @param documents - Array of Document objects to add/update\n     * @param batchSize - Size of the batch\n     * @param options - Options on document update\n     * @returns Promise containing array of enqueued task objects for each batch\n     */\n    async updateDocumentsInBatches(documents, batchSize = 1000, options) {\n        const updates = [];\n        for (let i = 0; i < documents.length; i += batchSize) {\n            updates.push(await this.updateDocuments(documents.slice(i, i + batchSize), options));\n        }\n        return updates;\n    }\n    /**\n     * Add or update multiples documents in a string format to an index. It only\n     * supports csv, ndjson and json formats.\n     *\n     * @param documents - Documents provided in a string to add/update\n     * @param contentType - Content type of your document:\n     *   'text/csv'|'application/x-ndjson'|'application/json'\n     * @param queryParams - Options on raw document addition\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateDocumentsFromString(documents, contentType, queryParams) {\n        const url = `indexes/${this.uid}/documents`;\n        const task = await this.httpRequest.put(url, documents, queryParams, {\n            headers: {\n                \"Content-Type\": contentType,\n            },\n        });\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Delete one document\n     *\n     * @param documentId - Id of Document to delete\n     * @returns Promise containing an EnqueuedTask\n     */\n    async deleteDocument(documentId) {\n        const url = `indexes/${this.uid}/documents/${documentId}`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    /**\n     * Delete multiples documents of an index.\n     *\n     * @param params - Params value can be:\n     *\n     *   - DocumentsDeletionQuery: An object containing the parameters to customize\n     *       your document deletion. Only available in Meilisearch v1.2 and newer\n     *   - DocumentsIds: An array of document ids to delete\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async deleteDocuments(params) {\n        // If params is of type DocumentsDeletionQuery\n        const isDocumentsDeletionQuery = !Array.isArray(params) && typeof params === \"object\";\n        const endpoint = isDocumentsDeletionQuery\n            ? \"documents/delete\"\n            : \"documents/delete-batch\";\n        const url = `indexes/${this.uid}/${endpoint}`;\n        try {\n            const task = await this.httpRequest.post(url, params);\n            return new EnqueuedTask(task);\n        }\n        catch (e) {\n            if (e instanceof MeiliSearchRequestError && isDocumentsDeletionQuery) {\n                e.message = versionErrorHintMessage(e.message, \"deleteDocuments\");\n            }\n            else if (e instanceof MeiliSearchApiError) {\n                e.message = versionErrorHintMessage(e.message, \"deleteDocuments\");\n            }\n            throw e;\n        }\n    }\n    /**\n     * Delete all documents of an index\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async deleteAllDocuments() {\n        const url = `indexes/${this.uid}/documents`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    /**\n     * This is an EXPERIMENTAL feature, which may break without a major version.\n     * It's available after Meilisearch v1.10.\n     *\n     * More info about the feature:\n     * https://github.com/orgs/meilisearch/discussions/762 More info about\n     * experimental features in general:\n     * https://www.meilisearch.com/docs/reference/api/experimental-features\n     *\n     * @param options - Object containing the function string and related options\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateDocumentsByFunction(options) {\n        const url = `indexes/${this.uid}/documents/edit`;\n        const task = await this.httpRequest.post(url, options);\n        return new EnqueuedTask(task);\n    }\n    ///\n    /// SETTINGS\n    ///\n    /**\n     * Retrieve all settings\n     *\n     * @returns Promise containing Settings object\n     */\n    async getSettings() {\n        const url = `indexes/${this.uid}/settings`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update all settings Any parameters not provided will be left unchanged.\n     *\n     * @param settings - Object containing parameters with their updated values\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateSettings(settings) {\n        const url = `indexes/${this.uid}/settings`;\n        const task = await this.httpRequest.patch(url, settings);\n        task.enqueued = new Date(task.enqueuedAt);\n        return task;\n    }\n    /**\n     * Reset settings.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetSettings() {\n        const url = `indexes/${this.uid}/settings`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// PAGINATION SETTINGS\n    ///\n    /**\n     * Get the pagination settings.\n     *\n     * @returns Promise containing object of pagination settings\n     */\n    async getPagination() {\n        const url = `indexes/${this.uid}/settings/pagination`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the pagination settings.\n     *\n     * @param pagination - Pagination object\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updatePagination(pagination) {\n        const url = `indexes/${this.uid}/settings/pagination`;\n        const task = await this.httpRequest.patch(url, pagination);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the pagination settings.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetPagination() {\n        const url = `indexes/${this.uid}/settings/pagination`;\n        const task = await this.httpRequest.delete(url);\n        return new EnqueuedTask(task);\n    }\n    ///\n    /// SYNONYMS\n    ///\n    /**\n     * Get the list of all synonyms\n     *\n     * @returns Promise containing object of synonym mappings\n     */\n    async getSynonyms() {\n        const url = `indexes/${this.uid}/settings/synonyms`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the list of synonyms. Overwrite the old list.\n     *\n     * @param synonyms - Mapping of synonyms with their associated words\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateSynonyms(synonyms) {\n        const url = `indexes/${this.uid}/settings/synonyms`;\n        const task = await this.httpRequest.put(url, synonyms);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the synonym list to be empty again\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetSynonyms() {\n        const url = `indexes/${this.uid}/settings/synonyms`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// STOP WORDS\n    ///\n    /**\n     * Get the list of all stop-words\n     *\n     * @returns Promise containing array of stop-words\n     */\n    async getStopWords() {\n        const url = `indexes/${this.uid}/settings/stop-words`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the list of stop-words. Overwrite the old list.\n     *\n     * @param stopWords - Array of strings that contains the stop-words.\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateStopWords(stopWords) {\n        const url = `indexes/${this.uid}/settings/stop-words`;\n        const task = await this.httpRequest.put(url, stopWords);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the stop-words list to be empty again\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetStopWords() {\n        const url = `indexes/${this.uid}/settings/stop-words`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// RANKING RULES\n    ///\n    /**\n     * Get the list of all ranking-rules\n     *\n     * @returns Promise containing array of ranking-rules\n     */\n    async getRankingRules() {\n        const url = `indexes/${this.uid}/settings/ranking-rules`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the list of ranking-rules. Overwrite the old list.\n     *\n     * @param rankingRules - Array that contain ranking rules sorted by order of\n     *   importance.\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateRankingRules(rankingRules) {\n        const url = `indexes/${this.uid}/settings/ranking-rules`;\n        const task = await this.httpRequest.put(url, rankingRules);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the ranking rules list to its default value\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetRankingRules() {\n        const url = `indexes/${this.uid}/settings/ranking-rules`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// DISTINCT ATTRIBUTE\n    ///\n    /**\n     * Get the distinct-attribute\n     *\n     * @returns Promise containing the distinct-attribute of the index\n     */\n    async getDistinctAttribute() {\n        const url = `indexes/${this.uid}/settings/distinct-attribute`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the distinct-attribute.\n     *\n     * @param distinctAttribute - Field name of the distinct-attribute\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateDistinctAttribute(distinctAttribute) {\n        const url = `indexes/${this.uid}/settings/distinct-attribute`;\n        const task = await this.httpRequest.put(url, distinctAttribute);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the distinct-attribute.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetDistinctAttribute() {\n        const url = `indexes/${this.uid}/settings/distinct-attribute`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// FILTERABLE ATTRIBUTES\n    ///\n    /**\n     * Get the filterable-attributes\n     *\n     * @returns Promise containing an array of filterable-attributes\n     */\n    async getFilterableAttributes() {\n        const url = `indexes/${this.uid}/settings/filterable-attributes`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the filterable-attributes.\n     *\n     * @param filterableAttributes - Array of strings containing the attributes\n     *   that can be used as filters at query time\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateFilterableAttributes(filterableAttributes) {\n        const url = `indexes/${this.uid}/settings/filterable-attributes`;\n        const task = await this.httpRequest.put(url, filterableAttributes);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the filterable-attributes.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetFilterableAttributes() {\n        const url = `indexes/${this.uid}/settings/filterable-attributes`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// SORTABLE ATTRIBUTES\n    ///\n    /**\n     * Get the sortable-attributes\n     *\n     * @returns Promise containing array of sortable-attributes\n     */\n    async getSortableAttributes() {\n        const url = `indexes/${this.uid}/settings/sortable-attributes`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the sortable-attributes.\n     *\n     * @param sortableAttributes - Array of strings containing the attributes that\n     *   can be used to sort search results at query time\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateSortableAttributes(sortableAttributes) {\n        const url = `indexes/${this.uid}/settings/sortable-attributes`;\n        const task = await this.httpRequest.put(url, sortableAttributes);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the sortable-attributes.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetSortableAttributes() {\n        const url = `indexes/${this.uid}/settings/sortable-attributes`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// SEARCHABLE ATTRIBUTE\n    ///\n    /**\n     * Get the searchable-attributes\n     *\n     * @returns Promise containing array of searchable-attributes\n     */\n    async getSearchableAttributes() {\n        const url = `indexes/${this.uid}/settings/searchable-attributes`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the searchable-attributes.\n     *\n     * @param searchableAttributes - Array of strings that contains searchable\n     *   attributes sorted by order of importance(most to least important)\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateSearchableAttributes(searchableAttributes) {\n        const url = `indexes/${this.uid}/settings/searchable-attributes`;\n        const task = await this.httpRequest.put(url, searchableAttributes);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the searchable-attributes.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetSearchableAttributes() {\n        const url = `indexes/${this.uid}/settings/searchable-attributes`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// DISPLAYED ATTRIBUTE\n    ///\n    /**\n     * Get the displayed-attributes\n     *\n     * @returns Promise containing array of displayed-attributes\n     */\n    async getDisplayedAttributes() {\n        const url = `indexes/${this.uid}/settings/displayed-attributes`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the displayed-attributes.\n     *\n     * @param displayedAttributes - Array of strings that contains attributes of\n     *   an index to display\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateDisplayedAttributes(displayedAttributes) {\n        const url = `indexes/${this.uid}/settings/displayed-attributes`;\n        const task = await this.httpRequest.put(url, displayedAttributes);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the displayed-attributes.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetDisplayedAttributes() {\n        const url = `indexes/${this.uid}/settings/displayed-attributes`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// TYPO TOLERANCE\n    ///\n    /**\n     * Get the typo tolerance settings.\n     *\n     * @returns Promise containing the typo tolerance settings.\n     */\n    async getTypoTolerance() {\n        const url = `indexes/${this.uid}/settings/typo-tolerance`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the typo tolerance settings.\n     *\n     * @param typoTolerance - Object containing the custom typo tolerance\n     *   settings.\n     * @returns Promise containing object of the enqueued update\n     */\n    async updateTypoTolerance(typoTolerance) {\n        const url = `indexes/${this.uid}/settings/typo-tolerance`;\n        const task = await this.httpRequest.patch(url, typoTolerance);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    /**\n     * Reset the typo tolerance settings.\n     *\n     * @returns Promise containing object of the enqueued update\n     */\n    async resetTypoTolerance() {\n        const url = `indexes/${this.uid}/settings/typo-tolerance`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// FACETING\n    ///\n    /**\n     * Get the faceting settings.\n     *\n     * @returns Promise containing object of faceting index settings\n     */\n    async getFaceting() {\n        const url = `indexes/${this.uid}/settings/faceting`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the faceting settings.\n     *\n     * @param faceting - Faceting index settings object\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateFaceting(faceting) {\n        const url = `indexes/${this.uid}/settings/faceting`;\n        const task = await this.httpRequest.patch(url, faceting);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the faceting settings.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetFaceting() {\n        const url = `indexes/${this.uid}/settings/faceting`;\n        const task = await this.httpRequest.delete(url);\n        return new EnqueuedTask(task);\n    }\n    ///\n    /// SEPARATOR TOKENS\n    ///\n    /**\n     * Get the list of all separator tokens.\n     *\n     * @returns Promise containing array of separator tokens\n     */\n    async getSeparatorTokens() {\n        const url = `indexes/${this.uid}/settings/separator-tokens`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the list of separator tokens. Overwrite the old list.\n     *\n     * @param separatorTokens - Array that contains separator tokens.\n     * @returns Promise containing an EnqueuedTask or null\n     */\n    async updateSeparatorTokens(separatorTokens) {\n        const url = `indexes/${this.uid}/settings/separator-tokens`;\n        const task = await this.httpRequest.put(url, separatorTokens);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the separator tokens list to its default value\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetSeparatorTokens() {\n        const url = `indexes/${this.uid}/settings/separator-tokens`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// NON-SEPARATOR TOKENS\n    ///\n    /**\n     * Get the list of all non-separator tokens.\n     *\n     * @returns Promise containing array of non-separator tokens\n     */\n    async getNonSeparatorTokens() {\n        const url = `indexes/${this.uid}/settings/non-separator-tokens`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the list of non-separator tokens. Overwrite the old list.\n     *\n     * @param nonSeparatorTokens - Array that contains non-separator tokens.\n     * @returns Promise containing an EnqueuedTask or null\n     */\n    async updateNonSeparatorTokens(nonSeparatorTokens) {\n        const url = `indexes/${this.uid}/settings/non-separator-tokens`;\n        const task = await this.httpRequest.put(url, nonSeparatorTokens);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the non-separator tokens list to its default value\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetNonSeparatorTokens() {\n        const url = `indexes/${this.uid}/settings/non-separator-tokens`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// DICTIONARY\n    ///\n    /**\n     * Get the dictionary settings of a Meilisearch index.\n     *\n     * @returns Promise containing the dictionary settings\n     */\n    async getDictionary() {\n        const url = `indexes/${this.uid}/settings/dictionary`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the dictionary settings. Overwrite the old settings.\n     *\n     * @param dictionary - Array that contains the new dictionary settings.\n     * @returns Promise containing an EnqueuedTask or null\n     */\n    async updateDictionary(dictionary) {\n        const url = `indexes/${this.uid}/settings/dictionary`;\n        const task = await this.httpRequest.put(url, dictionary);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the dictionary settings to its default value\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetDictionary() {\n        const url = `indexes/${this.uid}/settings/dictionary`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// PROXIMITY PRECISION\n    ///\n    /**\n     * Get the proximity precision settings of a Meilisearch index.\n     *\n     * @returns Promise containing the proximity precision settings\n     */\n    async getProximityPrecision() {\n        const url = `indexes/${this.uid}/settings/proximity-precision`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the proximity precision settings. Overwrite the old settings.\n     *\n     * @param proximityPrecision - String that contains the new proximity\n     *   precision settings.\n     * @returns Promise containing an EnqueuedTask or null\n     */\n    async updateProximityPrecision(proximityPrecision) {\n        const url = `indexes/${this.uid}/settings/proximity-precision`;\n        const task = await this.httpRequest.put(url, proximityPrecision);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the proximity precision settings to its default value\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetProximityPrecision() {\n        const url = `indexes/${this.uid}/settings/proximity-precision`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// EMBEDDERS\n    ///\n    /**\n     * Get the embedders settings of a Meilisearch index.\n     *\n     * @returns Promise containing the embedders settings\n     */\n    async getEmbedders() {\n        const url = `indexes/${this.uid}/settings/embedders`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the embedders settings. Overwrite the old settings.\n     *\n     * @param embedders - Object that contains the new embedders settings.\n     * @returns Promise containing an EnqueuedTask or null\n     */\n    async updateEmbedders(embedders) {\n        const url = `indexes/${this.uid}/settings/embedders`;\n        const task = await this.httpRequest.patch(url, embedders);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the embedders settings to its default value\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetEmbedders() {\n        const url = `indexes/${this.uid}/settings/embedders`;\n        const task = await this.httpRequest.delete(url);\n        task.enqueuedAt = new Date(task.enqueuedAt);\n        return task;\n    }\n    ///\n    /// SEARCHCUTOFFMS SETTINGS\n    ///\n    /**\n     * Get the SearchCutoffMs settings.\n     *\n     * @returns Promise containing object of SearchCutoffMs settings\n     */\n    async getSearchCutoffMs() {\n        const url = `indexes/${this.uid}/settings/search-cutoff-ms`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the SearchCutoffMs settings.\n     *\n     * @param searchCutoffMs - Object containing SearchCutoffMsSettings\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateSearchCutoffMs(searchCutoffMs) {\n        const url = `indexes/${this.uid}/settings/search-cutoff-ms`;\n        const task = await this.httpRequest.put(url, searchCutoffMs);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the SearchCutoffMs settings.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetSearchCutoffMs() {\n        const url = `indexes/${this.uid}/settings/search-cutoff-ms`;\n        const task = await this.httpRequest.delete(url);\n        return new EnqueuedTask(task);\n    }\n    ///\n    /// LOCALIZED ATTRIBUTES SETTINGS\n    ///\n    /**\n     * Get the localized attributes settings.\n     *\n     * @returns Promise containing object of localized attributes settings\n     */\n    async getLocalizedAttributes() {\n        const url = `indexes/${this.uid}/settings/localized-attributes`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the localized attributes settings.\n     *\n     * @param localizedAttributes - Localized attributes object\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateLocalizedAttributes(localizedAttributes) {\n        const url = `indexes/${this.uid}/settings/localized-attributes`;\n        const task = await this.httpRequest.put(url, localizedAttributes);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the localized attributes settings.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetLocalizedAttributes() {\n        const url = `indexes/${this.uid}/settings/localized-attributes`;\n        const task = await this.httpRequest.delete(url);\n        return new EnqueuedTask(task);\n    }\n    ///\n    /// FACET SEARCH SETTINGS\n    ///\n    /**\n     * Get the facet search settings.\n     *\n     * @returns Promise containing object of facet search settings\n     */\n    async getFacetSearch() {\n        const url = `indexes/${this.uid}/settings/facet-search`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the facet search settings.\n     *\n     * @param facetSearch - Boolean value\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updateFacetSearch(facetSearch) {\n        const url = `indexes/${this.uid}/settings/facet-search`;\n        const task = await this.httpRequest.put(url, facetSearch);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the facet search settings.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetFacetSearch() {\n        const url = `indexes/${this.uid}/settings/facet-search`;\n        const task = await this.httpRequest.delete(url);\n        return new EnqueuedTask(task);\n    }\n    ///\n    /// PREFIX SEARCH SETTINGS\n    ///\n    /**\n     * Get the prefix search settings.\n     *\n     * @returns Promise containing object of prefix search settings\n     */\n    async getPrefixSearch() {\n        const url = `indexes/${this.uid}/settings/prefix-search`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Update the prefix search settings.\n     *\n     * @param prefixSearch - PrefixSearch value\n     * @returns Promise containing an EnqueuedTask\n     */\n    async updatePrefixSearch(prefixSearch) {\n        const url = `indexes/${this.uid}/settings/prefix-search`;\n        const task = await this.httpRequest.put(url, prefixSearch);\n        return new EnqueuedTask(task);\n    }\n    /**\n     * Reset the prefix search settings.\n     *\n     * @returns Promise containing an EnqueuedTask\n     */\n    async resetPrefixSearch() {\n        const url = `indexes/${this.uid}/settings/prefix-search`;\n        const task = await this.httpRequest.delete(url);\n        return new EnqueuedTask(task);\n    }\n}\nexport { Index };\n//# sourceMappingURL=indexes.js.map","/*\n * Bundle: MeiliSearch\n * Project: MeiliSearch - Javascript API\n * Author: Quentin de Quelen <quentin@meilisearch.com>\n * Copyright: 2019, MeiliSearch\n */\nimport { Index } from \"./indexes.js\";\nimport { ErrorStatusCode } from \"./types.js\";\nimport { HttpRequests } from \"./http-requests.js\";\nimport { TaskClient } from \"./task.js\";\nimport { EnqueuedTask } from \"./enqueued-task.js\";\nimport { BatchClient } from \"./batch.js\";\nexport class MeiliSearch {\n    config;\n    httpRequest;\n    tasks;\n    batches;\n    /**\n     * Creates new MeiliSearch instance\n     *\n     * @param config - Configuration object\n     */\n    constructor(config) {\n        this.config = config;\n        this.httpRequest = new HttpRequests(config);\n        this.tasks = new TaskClient(config);\n        this.batches = new BatchClient(config);\n    }\n    /**\n     * Return an Index instance\n     *\n     * @param indexUid - The index UID\n     * @returns Instance of Index\n     */\n    index(indexUid) {\n        return new Index(this.config, indexUid);\n    }\n    /**\n     * Gather information about an index by calling MeiliSearch and return an\n     * Index instance with the gathered information\n     *\n     * @param indexUid - The index UID\n     * @returns Promise returning Index instance\n     */\n    async getIndex(indexUid) {\n        return new Index(this.config, indexUid).fetchInfo();\n    }\n    /**\n     * Gather information about an index by calling MeiliSearch and return the raw\n     * JSON response\n     *\n     * @param indexUid - The index UID\n     * @returns Promise returning index information\n     */\n    async getRawIndex(indexUid) {\n        return new Index(this.config, indexUid).getRawInfo();\n    }\n    /**\n     * Get all the indexes as Index instances.\n     *\n     * @param parameters - Parameters to browse the indexes\n     * @returns Promise returning array of raw index information\n     */\n    async getIndexes(parameters = {}) {\n        const rawIndexes = await this.getRawIndexes(parameters);\n        const indexes = rawIndexes.results.map((index) => new Index(this.config, index.uid, index.primaryKey));\n        return { ...rawIndexes, results: indexes };\n    }\n    /**\n     * Get all the indexes in their raw value (no Index instances).\n     *\n     * @param parameters - Parameters to browse the indexes\n     * @returns Promise returning array of raw index information\n     */\n    async getRawIndexes(parameters = {}) {\n        const url = `indexes`;\n        return await this.httpRequest.get(url, parameters);\n    }\n    /**\n     * Create a new index\n     *\n     * @param uid - The index UID\n     * @param options - Index options\n     * @returns Promise returning Index instance\n     */\n    async createIndex(uid, options = {}) {\n        return await Index.create(uid, options, this.config);\n    }\n    /**\n     * Update an index\n     *\n     * @param uid - The index UID\n     * @param options - Index options to update\n     * @returns Promise returning Index instance after updating\n     */\n    async updateIndex(uid, options = {}) {\n        return await new Index(this.config, uid).update(options);\n    }\n    /**\n     * Delete an index\n     *\n     * @param uid - The index UID\n     * @returns Promise which resolves when index is deleted successfully\n     */\n    async deleteIndex(uid) {\n        return await new Index(this.config, uid).delete();\n    }\n    /**\n     * Deletes an index if it already exists.\n     *\n     * @param uid - The index UID\n     * @returns Promise which resolves to true when index exists and is deleted\n     *   successfully, otherwise false if it does not exist\n     */\n    async deleteIndexIfExists(uid) {\n        try {\n            await this.deleteIndex(uid);\n            return true;\n        }\n        catch (e) {\n            if (e.code === ErrorStatusCode.INDEX_NOT_FOUND) {\n                return false;\n            }\n            throw e;\n        }\n    }\n    /**\n     * Swaps a list of index tuples.\n     *\n     * @param params - List of indexes tuples to swap.\n     * @returns Promise returning object of the enqueued task\n     */\n    async swapIndexes(params) {\n        const url = \"/swap-indexes\";\n        return await this.httpRequest.post(url, params);\n    }\n    ///\n    /// Multi Search\n    ///\n    /**\n     * Perform multiple search queries.\n     *\n     * It is possible to make multiple search queries on the same index or on\n     * different ones\n     *\n     * @example\n     *\n     * ```ts\n     * client.multiSearch({\n     *   queries: [\n     *     { indexUid: \"movies\", q: \"wonder\" },\n     *     { indexUid: \"books\", q: \"flower\" },\n     *   ],\n     * });\n     * ```\n     *\n     * @param queries - Search queries\n     * @param config - Additional request configuration options\n     * @returns Promise containing the search responses\n     */\n    async multiSearch(queries, config) {\n        const url = `multi-search`;\n        return await this.httpRequest.post(url, queries, undefined, config);\n    }\n    ///\n    /// TASKS\n    ///\n    /**\n     * Get the list of all client tasks\n     *\n     * @param parameters - Parameters to browse the tasks\n     * @returns Promise returning all tasks\n     */\n    async getTasks(parameters = {}) {\n        return await this.tasks.getTasks(parameters);\n    }\n    /**\n     * Get one task on the client scope\n     *\n     * @param taskUid - Task identifier\n     * @returns Promise returning a task\n     */\n    async getTask(taskUid) {\n        return await this.tasks.getTask(taskUid);\n    }\n    /**\n     * Wait for multiple tasks to be finished.\n     *\n     * @param taskUids - Tasks identifier\n     * @param waitOptions - Options on timeout and interval\n     * @returns Promise returning an array of tasks\n     */\n    async waitForTasks(taskUids, { timeOutMs = 5000, intervalMs = 50 } = {}) {\n        return await this.tasks.waitForTasks(taskUids, {\n            timeOutMs,\n            intervalMs,\n        });\n    }\n    /**\n     * Wait for a task to be finished.\n     *\n     * @param taskUid - Task identifier\n     * @param waitOptions - Options on timeout and interval\n     * @returns Promise returning an array of tasks\n     */\n    async waitForTask(taskUid, { timeOutMs = 5000, intervalMs = 50 } = {}) {\n        return await this.tasks.waitForTask(taskUid, {\n            timeOutMs,\n            intervalMs,\n        });\n    }\n    /**\n     * Cancel a list of enqueued or processing tasks.\n     *\n     * @param parameters - Parameters to filter the tasks.\n     * @returns Promise containing an EnqueuedTask\n     */\n    async cancelTasks(parameters) {\n        return await this.tasks.cancelTasks(parameters);\n    }\n    /**\n     * Delete a list of tasks.\n     *\n     * @param parameters - Parameters to filter the tasks.\n     * @returns Promise containing an EnqueuedTask\n     */\n    async deleteTasks(parameters = {}) {\n        return await this.tasks.deleteTasks(parameters);\n    }\n    /**\n     * Get all the batches\n     *\n     * @param parameters - Parameters to browse the batches\n     * @returns Promise returning all batches\n     */\n    async getBatches(parameters = {}) {\n        return await this.batches.getBatches(parameters);\n    }\n    /**\n     * Get one batch\n     *\n     * @param uid - Batch identifier\n     * @returns Promise returning a batch\n     */\n    async getBatch(uid) {\n        return await this.batches.getBatch(uid);\n    }\n    ///\n    /// KEYS\n    ///\n    /**\n     * Get all API keys\n     *\n     * @param parameters - Parameters to browse the indexes\n     * @returns Promise returning an object with keys\n     */\n    async getKeys(parameters = {}) {\n        const url = `keys`;\n        const keys = await this.httpRequest.get(url, parameters);\n        keys.results = keys.results.map((key) => ({\n            ...key,\n            createdAt: new Date(key.createdAt),\n            updatedAt: new Date(key.updatedAt),\n        }));\n        return keys;\n    }\n    /**\n     * Get one API key\n     *\n     * @param keyOrUid - Key or uid of the API key\n     * @returns Promise returning a key\n     */\n    async getKey(keyOrUid) {\n        const url = `keys/${keyOrUid}`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Create one API key\n     *\n     * @param options - Key options\n     * @returns Promise returning a key\n     */\n    async createKey(options) {\n        const url = `keys`;\n        return await this.httpRequest.post(url, options);\n    }\n    /**\n     * Update one API key\n     *\n     * @param keyOrUid - Key\n     * @param options - Key options\n     * @returns Promise returning a key\n     */\n    async updateKey(keyOrUid, options) {\n        const url = `keys/${keyOrUid}`;\n        return await this.httpRequest.patch(url, options);\n    }\n    /**\n     * Delete one API key\n     *\n     * @param keyOrUid - Key\n     * @returns\n     */\n    async deleteKey(keyOrUid) {\n        const url = `keys/${keyOrUid}`;\n        return await this.httpRequest.delete(url);\n    }\n    ///\n    /// HEALTH\n    ///\n    /**\n     * Checks if the server is healthy, otherwise an error will be thrown.\n     *\n     * @returns Promise returning an object with health details\n     */\n    async health() {\n        const url = `health`;\n        return await this.httpRequest.get(url);\n    }\n    /**\n     * Checks if the server is healthy, return true or false.\n     *\n     * @returns Promise returning a boolean\n     */\n    async isHealthy() {\n        try {\n            const url = `health`;\n            await this.httpRequest.get(url);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    ///\n    /// STATS\n    ///\n    /**\n     * Get the stats of all the database\n     *\n     * @returns Promise returning object of all the stats\n     */\n    async getStats() {\n        const url = `stats`;\n        return await this.httpRequest.get(url);\n    }\n    ///\n    /// VERSION\n    ///\n    /**\n     * Get the version of MeiliSearch\n     *\n     * @returns Promise returning object with version details\n     */\n    async getVersion() {\n        const url = `version`;\n        return await this.httpRequest.get(url);\n    }\n    ///\n    /// DUMPS\n    ///\n    /**\n     * Creates a dump\n     *\n     * @returns Promise returning object of the enqueued task\n     */\n    async createDump() {\n        const url = `dumps`;\n        const task = await this.httpRequest.post(url);\n        return new EnqueuedTask(task);\n    }\n    ///\n    /// SNAPSHOTS\n    ///\n    /**\n     * Creates a snapshot\n     *\n     * @returns Promise returning object of the enqueued task\n     */\n    async createSnapshot() {\n        const url = `snapshots`;\n        const task = await this.httpRequest.post(url);\n        return new EnqueuedTask(task);\n    }\n}\n//# sourceMappingURL=meilisearch.js.map","import { MeiliSearch } from \"meilisearch\";\nimport \"./styles.css\";\n\n/**\n * Ghost Meilisearch Search UI\n * A search UI for Ghost blogs using Meilisearch\n */\nclass GhostMeilisearchSearch {\n    constructor(config = {}) {\n        // Default configuration\n        const defaultConfig = {\n            meilisearchHost: null,\n            meilisearchApiKey: null,\n            indexName: null,\n            commonSearches: [],\n            theme: \"system\",\n            enableHighlighting: true,\n            searchFields: {\n                title: { weight: 5, highlight: true },\n                plaintext: { weight: 4, highlight: true },\n                excerpt: { weight: 3, highlight: true },\n                html: { weight: 1, highlight: true },\n            },\n            // AI Search Configuration\n            enableAiSearch: false,\n            aiSearchEmbedder: null,\n            aiSearchLimit: 3, // Limit for AI results\n        };\n\n        // Merge default config with user config\n        this.config = {\n            ...defaultConfig,\n            ...config,\n        };\n\n        // Initialize state\n        this.state = {\n            isOpen: false,\n            query: \"\",\n            normalResults: [], // Renamed from results\n            aiResults: [], // Added for AI search results\n            loading: false,\n            selectedIndex: -1,\n            error: null,\n        };\n\n        // Initialize MeiliSearch client\n        this.client = new MeiliSearch({\n            host: this.config.meilisearchHost,\n            apiKey: this.config.meilisearchApiKey,\n        });\n\n        // Get index\n        this.index = this.client.index(this.config.indexName);\n\n        // Create DOM elements\n        this.createDOMElements();\n\n        // Apply theme\n        this.applyTheme();\n\n        // Setup color scheme observer\n        this.setupColorSchemeObserver();\n\n        // Add event listeners\n        this.addEventListeners();\n\n        // Populate common searches\n        this.populateCommonSearches();\n\n        // Adjust modal for screen size\n        this.adjustModalForScreenSize();\n    }\n\n    /**\n     * Create DOM elements for the search UI\n     */\n    createDOMElements() {\n        // Create wrapper element\n        this.wrapper = document.createElement(\"div\");\n        this.wrapper.id = \"ms-search-wrapper\";\n        document.body.appendChild(this.wrapper);\n\n        // Create modal element\n        this.modal = document.createElement(\"div\");\n        this.modal.id = \"ms-search-modal\";\n        this.modal.classList.add(\"hidden\");\n        this.wrapper.appendChild(this.modal);\n\n        // Create modal content\n        this.modal.innerHTML = `\n      <div class=\"ms-backdrop\"></div>\n      <div class=\"ms-modal-container\">\n        <button class=\"ms-close-button\" aria-label=\"Close search\">&times;</button>\n        <div class=\"ms-modal-content\">\n          <div class=\"ms-search-header\">\n            <input type=\"text\" class=\"ms-search-input\" placeholder=\"Search...\" aria-label=\"Search\">\n          </div>\n          <div class=\"ms-keyboard-hints\">\n            <span><span class=\"ms-kbd\">↑</span><span class=\"ms-kbd\">↓</span> to navigate</span>\n            <span><span class=\"ms-kbd\">↵</span> to select</span>\n            <span><span class=\"ms-kbd\">ESC</span> to close</span>\n          </div>\n          <div class=\"ms-results-container\">\n            <div class=\"ms-common-searches\">\n              <div class=\"ms-common-searches-title\">Common searches</div>\n              <div class=\"ms-common-searches-list\"></div>\n            </div>\n            <div class=\"ms-ai-results-section hidden\">\n              <div class=\"ms-results-section-title\">AI Suggestions</div>\n              <ul class=\"ms-ai-hits-list\"></ul>\n            </div>\n            <div class=\"ms-normal-results-section\">\n              <div class=\"ms-results-section-title\">Keyword Matches</div>\n              <ul class=\"ms-normal-hits-list\"></ul>\n            </div>\n            <div class=\"ms-loading-state\">\n              <div class=\"ms-loading-spinner\"></div>\n              <div>Searching...</div>\n            </div>\n            <div class=\"ms-empty-state\">\n              <div class=\"ms-empty-message\">No results found for your search.</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n\n        // Get references to elements\n        this.searchInput = this.modal.querySelector(\".ms-search-input\");\n        this.closeButton = this.modal.querySelector(\".ms-close-button\");\n        this.aiResultsSection = this.modal.querySelector(\n            \".ms-ai-results-section\"\n        );\n        this.aiHitsList = this.modal.querySelector(\".ms-ai-hits-list\");\n        this.normalResultsSection = this.modal.querySelector(\n            \".ms-normal-results-section\"\n        ); // Added for potential styling/visibility control\n        this.normalHitsList = this.modal.querySelector(\".ms-normal-hits-list\"); // Renamed from hitsList\n        this.loadingState = this.modal.querySelector(\".ms-loading-state\");\n        this.emptyState = this.modal.querySelector(\".ms-empty-state\");\n        this.commonSearchesList = this.modal.querySelector(\n            \".ms-common-searches-list\"\n        );\n        this.commonSearchesSection = this.modal.querySelector(\n            \".ms-common-searches\"\n        );\n\n        // Populate common searches\n        this.populateCommonSearches();\n\n        // Apply theme based on page color scheme\n        this.applyTheme();\n    }\n\n    /**\n     * Populate common searches section\n     */\n    populateCommonSearches() {\n        if (\n            !this.config.commonSearches ||\n            this.config.commonSearches.length === 0\n        ) {\n            this.commonSearchesSection.classList.add(\"hidden\");\n            return;\n        }\n\n        this.commonSearchesList.innerHTML = \"\";\n        this.config.commonSearches.forEach((search) => {\n            const button = document.createElement(\"button\");\n            button.classList.add(\"ms-common-search-btn\");\n            button.textContent = search;\n            button.addEventListener(\"click\", () => {\n                this.searchInput.value = search;\n                this.state.query = search;\n                this.performSearch();\n            });\n            this.commonSearchesList.appendChild(button);\n        });\n    }\n\n    /**\n     * Apply theme based on page color scheme\n     */\n    applyTheme() {\n        // First check for data-color-scheme on html or body element\n        const htmlColorScheme =\n            document.documentElement.getAttribute(\"data-color-scheme\");\n        const bodyColorScheme = document.body.getAttribute(\"data-color-scheme\");\n        const pageColorScheme =\n            htmlColorScheme || bodyColorScheme || this.config.theme;\n\n        // Remove any existing classes\n        this.wrapper.classList.remove(\"dark\", \"light\");\n\n        if (pageColorScheme === \"dark\") {\n            this.wrapper.classList.add(\"dark\");\n        } else if (pageColorScheme === \"system\") {\n            // Check system preference\n            const prefersDark = window.matchMedia(\n                \"(prefers-color-scheme: dark)\"\n            ).matches;\n            if (prefersDark) {\n                this.wrapper.classList.add(\"dark\");\n            } else {\n                this.wrapper.classList.add(\"light\");\n            }\n\n            // Listen for changes in system preference\n            window\n                .matchMedia(\"(prefers-color-scheme: dark)\")\n                .addEventListener(\"change\", (e) => {\n                    this.wrapper.classList.remove(\"dark\", \"light\");\n                    if (e.matches) {\n                        this.wrapper.classList.add(\"dark\");\n                    } else {\n                        this.wrapper.classList.add(\"light\");\n                    }\n                });\n        } else {\n            // Default to light\n            this.wrapper.classList.add(\"light\");\n        }\n\n        // Add MutationObserver to watch for changes in data-color-scheme\n        this.setupColorSchemeObserver();\n    }\n\n    /**\n     * Set up observer to watch for changes in data-color-scheme\n     */\n    setupColorSchemeObserver() {\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                if (\n                    mutation.type === \"attributes\" &&\n                    mutation.attributeName === \"data-color-scheme\"\n                ) {\n                    this.applyTheme();\n                }\n            });\n        });\n\n        // Observe both html and body for changes\n        observer.observe(document.documentElement, {\n            attributes: true,\n            attributeFilter: [\"data-color-scheme\"],\n        });\n        observer.observe(document.body, {\n            attributes: true,\n            attributeFilter: [\"data-color-scheme\"],\n        });\n    }\n\n    /**\n     * Add event listeners\n     */\n    addEventListeners() {\n        // Close button click\n        this.closeButton.addEventListener(\"click\", () => this.close());\n\n        // Backdrop click\n        this.modal\n            .querySelector(\".ms-backdrop\")\n            .addEventListener(\"click\", () => this.close());\n\n        // Search input\n        this.searchInput.addEventListener(\"input\", () => {\n            this.state.query = this.searchInput.value;\n            this.performSearch();\n        });\n\n        // Keyboard navigation\n        document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n\n        // Add click event to search triggers\n        document.querySelectorAll(\"[data-ghost-search]\").forEach((el) => {\n            el.addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                this.open();\n            });\n        });\n\n        // Keyboard shortcuts\n        document.addEventListener(\"keydown\", (e) => {\n            // Cmd+K or Ctrl+K\n            if ((e.metaKey || e.ctrlKey) && e.key === \"k\") {\n                e.preventDefault();\n                this.open();\n            }\n\n            // Forward slash (/) when not in an input\n            if (\n                e.key === \"/\" &&\n                ![\"INPUT\", \"TEXTAREA\"].includes(document.activeElement.tagName)\n            ) {\n                e.preventDefault();\n                this.open();\n            }\n        });\n\n        // Handle window resize\n        window.addEventListener(\"resize\", () => {\n            if (this.state.isOpen) {\n                // Adjust modal position and size on resize\n                this.adjustModalForScreenSize();\n            }\n        });\n    }\n\n    /**\n     * Handle keyboard navigation\n     */\n    handleKeyDown(e) {\n        if (!this.state.isOpen) return;\n\n        switch (e.key) {\n            case \"Escape\":\n                e.preventDefault();\n                this.close();\n                break;\n            case \"ArrowDown\":\n                e.preventDefault(); // Prevent page scrolling\n                this.navigateResults(1);\n                break;\n            case \"ArrowUp\":\n                e.preventDefault(); // Prevent page scrolling\n                this.navigateResults(-1);\n                break;\n            case \"Enter\":\n                e.preventDefault();\n                this.selectResult();\n                break;\n        }\n    }\n\n    /**\n     * Adjust modal for different screen sizes\n     */\n    adjustModalForScreenSize() {\n        const isMobile = window.innerWidth < 640;\n\n        if (isMobile) {\n            // Mobile optimizations\n            this.modal.querySelector(\".ms-modal-content\").style.height =\n                \"100vh\";\n            this.modal.querySelector(\".ms-results-container\").style.maxHeight =\n                \"calc(100vh - 7rem)\";\n        } else {\n            // Desktop optimizations\n            this.modal.querySelector(\".ms-modal-content\").style.height = \"\";\n            this.modal.querySelector(\".ms-results-container\").style.maxHeight =\n                \"\";\n        }\n    }\n\n    /**\n     * Navigate through search results\n     */\n    navigateResults(direction) {\n        // Combine results from both lists for navigation\n        const combinedResults = [\n            ...(this.config.enableAiSearch ? this.state.aiResults : []),\n            ...this.state.normalResults,\n        ];\n\n        const totalResults = combinedResults.length;\n        if (totalResults === 0) return;\n\n        // Calculate new index\n        let newIndex = this.state.selectedIndex + direction;\n\n        // Wrap around\n        if (newIndex < 0) {\n            newIndex = totalResults - 1;\n        } else if (newIndex >= totalResults) {\n            newIndex = 0;\n        }\n\n        // Update selected index\n        this.state.selectedIndex = newIndex;\n\n        // Update UI\n        this.updateSelectedResult();\n    }\n\n    /**\n     * Update the selected result in the UI across both lists\n     */\n    updateSelectedResult() {\n        // Get all result links from both lists\n        const resultElements = this.modal.querySelectorAll(\".ms-result-link\");\n\n        // Remove selected class from all results\n        resultElements.forEach((el) => el.classList.remove(\"ms-selected\"));\n\n        // Add selected class to current result if index is valid\n        if (\n            this.state.selectedIndex >= 0 &&\n            this.state.selectedIndex < resultElements.length\n        ) {\n            const selectedElement = resultElements[this.state.selectedIndex];\n            selectedElement.classList.add(\"ms-selected\");\n\n            // Scroll into view if needed\n            const container = this.modal.querySelector(\".ms-results-container\");\n            // Get position relative to the container, not just the list\n            const elementTop = selectedElement.offsetTop - container.offsetTop;\n            const elementBottom = elementTop + selectedElement.offsetHeight;\n            const containerScrollTop = container.scrollTop;\n            const containerVisibleHeight = container.offsetHeight;\n\n            if (elementTop < containerScrollTop) {\n                // Element is above the visible area\n                container.scrollTop = elementTop;\n            } else if (\n                elementBottom >\n                containerScrollTop + containerVisibleHeight\n            ) {\n                // Element is below the visible area\n                container.scrollTop = elementBottom - containerVisibleHeight;\n            }\n            // No scrolling needed if element is already within the visible area\n        }\n    }\n\n    /**\n     * Select the current result from the combined list\n     */\n    selectResult() {\n        // Combine results from both lists\n        const combinedResults = [\n            ...(this.config.enableAiSearch ? this.state.aiResults : []),\n            ...this.state.normalResults,\n        ];\n\n        const totalResults = combinedResults.length;\n        if (\n            totalResults === 0 ||\n            this.state.selectedIndex < 0 ||\n            this.state.selectedIndex >= totalResults\n        ) {\n            return; // No valid selection\n        }\n\n        const selectedResult = combinedResults[this.state.selectedIndex];\n\n        // Close the search UI first\n        this.close();\n\n        // Then redirect to the URL or slug\n        const targetUrl =\n            selectedResult.url ||\n            (selectedResult.slug ? `/${selectedResult.slug}` : null);\n\n        if (targetUrl) {\n            // Use setTimeout to ensure the close animation can start before navigation\n            setTimeout(() => {\n                window.location.href = targetUrl;\n            }, 10);\n        } else {\n            console.warn(\"Selected result has no URL or slug:\", selectedResult);\n        }\n    }\n\n    /**\n     * Open the search modal\n     */\n    open() {\n        this.state.isOpen = true;\n        this.modal.classList.remove(\"hidden\");\n        this.searchInput.focus();\n\n        // Check if search input is empty and hide elements if needed\n        if (this.state.query.trim() === \"\") {\n            this.modal\n                .querySelector(\".ms-keyboard-hints\")\n                .classList.add(\"hidden\");\n            this.modal\n                .querySelector(\".ms-results-container\")\n                .classList.add(\"ms-results-empty\");\n        } else {\n            this.modal\n                .querySelector(\".ms-keyboard-hints\")\n                .classList.remove(\"hidden\");\n            this.modal\n                .querySelector(\".ms-results-container\")\n                .classList.remove(\"ms-results-empty\");\n        }\n\n        // Prevent body scrolling\n        document.body.style.overflow = \"hidden\";\n\n        // Adjust for screen size\n        this.adjustModalForScreenSize();\n    }\n\n    /**\n     * Close the search modal\n     */\n    close() {\n        this.state.isOpen = false;\n        this.modal.classList.add(\"hidden\");\n\n        // Reset state\n        this.state.selectedIndex = -1;\n\n        // Allow body scrolling\n        document.body.style.overflow = \"\";\n    }\n\n    /**\n     * Extract text between double quotes for exact phrase matching\n     * @param {string} text - The text to extract from\n     * @returns {string|null} The extracted text or null if no quoted phrase found\n     */\n    extractTextBetweenQuotes(text) {\n        if (!text) return null;\n        const match = text.match(/\"([^\"]+)\"/);\n        return match ? match[1] : null;\n    }\n\n    /**\n     * Perform search with current query\n     */\n    async performSearch() {\n        const query = this.state.query.trim();\n\n        // Reset results and hide AI section initially\n        this.state.aiResults = [];\n        this.state.normalResults = [];\n        this.aiResultsSection.classList.add(\"hidden\");\n        this.normalResultsSection.classList.remove(\"hidden\"); // Ensure normal section is visible\n\n        // Show/hide common searches based on query\n        if (query === \"\") {\n            this.commonSearchesSection.classList.remove(\"hidden\");\n            this.aiHitsList.innerHTML = \"\"; // Clear AI list\n            this.normalHitsList.innerHTML = \"\"; // Clear normal list\n            this.loadingState.classList.remove(\"active\");\n            this.emptyState.classList.remove(\"active\");\n\n            // Hide keyboard hints and results container when search is empty\n            this.modal\n                .querySelector(\".ms-keyboard-hints\")\n                .classList.add(\"hidden\");\n            this.modal\n                .querySelector(\".ms-results-container\")\n                .classList.add(\"ms-results-empty\");\n\n            return;\n        } else {\n            this.commonSearchesSection.classList.add(\"hidden\");\n\n            // Show keyboard hints and results container when search has content\n            this.modal\n                .querySelector(\".ms-keyboard-hints\")\n                .classList.remove(\"hidden\");\n            this.modal\n                .querySelector(\".ms-results-container\")\n                .classList.remove(\"ms-results-empty\");\n        }\n\n        // Set loading state\n        this.state.loading = true;\n        this.loadingState.classList.add(\"active\");\n        this.emptyState.classList.remove(\"active\");\n\n        try {\n            // Prepare base search parameters\n            const baseSearchParams = {\n                limit: 100, // Consider making this configurable?\n                attributesToHighlight: Object.entries(this.config.searchFields)\n                    .filter(([_, config]) => config.highlight)\n                    .map(([field]) => field),\n                attributesToRetrieve: [\n                    \"title\",\n                    \"url\",\n                    \"excerpt\",\n                    \"plaintext\",\n                    \"tags\",\n                    \"slug\", // Ensure slug is retrieved\n                    \"visibility\", // <-- Add visibility here\n                    // Add any other fields needed for display or logic\n                ],\n                highlightPreTag: \"<em>\", // Ensure consistent highlighting tags\n                highlightPostTag: \"</em>\",\n            };\n\n            let aiSearchPromise = Promise.resolve({ hits: [] }); // Default to empty results\n            let normalSearchPromise;\n\n            // --- Conditional Search Execution ---\n            if (this.config.enableAiSearch && this.config.aiSearchEmbedder) {\n                // --- AI Search Enabled ---\n                this.aiResultsSection.classList.remove(\"hidden\"); // Show AI section\n\n                // AI Search Parameters (using hybrid)\n                const aiSearchParams = {\n                    ...baseSearchParams,\n                    limit: this.config.aiSearchLimit, // Apply AI-specific limit\n                    hybrid: {\n                        embedder: this.config.aiSearchEmbedder,\n                        // semanticRatio: 0.9 // Optional: Tune ratio if needed\n                    },\n                    // attributesToSearchOn: undefined, // Let hybrid handle searchable attributes\n                    // matchingStrategy: undefined // Let hybrid handle matching\n                };\n                aiSearchPromise = this.index.search(query, aiSearchParams);\n\n                // Normal Search Parameters (when AI is also enabled)\n                const normalSearchParams = {\n                    ...baseSearchParams,\n                    attributesToSearchOn: [\"title\", \"plaintext\", \"excerpt\"], // Specify for keyword search\n                    matchingStrategy: \"last\", // Default strategy for keyword search\n                };\n                normalSearchPromise = this.index.search(\n                    query,\n                    normalSearchParams\n                );\n            } else {\n                // --- AI Search Disabled (Standard Search Only) ---\n                this.aiResultsSection.classList.add(\"hidden\"); // Ensure AI section is hidden\n\n                // Check for exact phrase matching (only when AI is disabled)\n                const hasQuotes = query.startsWith('\"') && query.endsWith('\"');\n                const exactPhrase = this.extractTextBetweenQuotes(query);\n                const isExactMatch = hasQuotes || exactPhrase !== null;\n\n                const normalSearchParams = {\n                    ...baseSearchParams,\n                    attributesToSearchOn: [\"title\", \"plaintext\", \"excerpt\"],\n                };\n\n                if (isExactMatch) {\n                    // Handle exact phrase search (existing logic)\n                    const searchPhrase = hasQuotes\n                        ? query.slice(1, -1)\n                        : exactPhrase;\n                    normalSearchParams.matchingStrategy = \"all\"; // Use 'all' for initial fetch\n\n                    // Perform initial search and then filter manually\n                    normalSearchPromise = this.index\n                        .search(searchPhrase, normalSearchParams)\n                        .then((initialResults) => {\n                            if (initialResults.hits.length > 0) {\n                                const lowerPhrase = searchPhrase.toLowerCase();\n                                const filteredHits = initialResults.hits.filter(\n                                    (hit) =>\n                                        (hit.title &&\n                                            hit.title\n                                                .toLowerCase()\n                                                .includes(lowerPhrase)) ||\n                                        (hit.plaintext &&\n                                            hit.plaintext\n                                                .toLowerCase()\n                                                .includes(lowerPhrase)) ||\n                                        (hit.excerpt &&\n                                            hit.excerpt\n                                                .toLowerCase()\n                                                .includes(lowerPhrase))\n                                );\n                                // Return the structure MeiliSearch expects, with filtered hits\n                                return {\n                                    ...initialResults,\n                                    hits: filteredHits,\n                                };\n                            }\n                            return initialResults; // Return original if no hits initially\n                        });\n                } else {\n                    // Regular keyword search\n                    normalSearchParams.matchingStrategy = \"last\";\n                    normalSearchPromise = this.index.search(\n                        query,\n                        normalSearchParams\n                    );\n                }\n            }\n\n            // --- Execute Searches and Process Results ---\n            const [aiResults, normalResults] = await Promise.all([\n                aiSearchPromise,\n                normalSearchPromise,\n            ]);\n\n            // Update state\n            this.state.loading = false;\n            this.state.aiResults = aiResults.hits || [];\n            this.state.normalResults = normalResults.hits || [];\n            this.state.selectedIndex = -1; // Reset selection\n            this.state.error = null; // Clear previous errors\n\n            // Update UI\n            this.renderResults(); // Call renderResults without arguments\n\n            // Hide loading state\n            this.loadingState.classList.remove(\"active\");\n\n            // Show empty state if *both* result sets are empty\n            if (\n                this.state.aiResults.length === 0 &&\n                this.state.normalResults.length === 0\n            ) {\n                this.emptyState.classList.add(\"active\");\n                this.emptyState.querySelector(\".ms-empty-message\").textContent =\n                    \"No results found for your search.\";\n            }\n        } catch (error) {\n            console.error(\"Search error:\", error);\n            this.state.loading = false;\n            this.state.error = error;\n            this.state.aiResults = []; // Clear results on error\n            this.state.normalResults = [];\n            this.loadingState.classList.remove(\"active\");\n            this.aiResultsSection.classList.add(\"hidden\"); // Hide AI section on error\n\n            // Show empty state with error message\n            this.emptyState.classList.add(\"active\");\n            this.emptyState.querySelector(\".ms-empty-message\").textContent =\n                \"An error occurred while searching. Please try again.\";\n\n            // Render empty results\n            this.renderResults();\n        }\n    }\n\n    /**\n     * Render search results based on current state\n     */\n    renderResults() {\n        // Clear previous results\n        this.aiHitsList.innerHTML = \"\";\n        this.normalHitsList.innerHTML = \"\";\n\n        const query = this.state.query.trim();\n\n        // Render AI Results\n        if (this.config.enableAiSearch && this.state.aiResults.length > 0) {\n            this.aiResultsSection.classList.remove(\"hidden\");\n            this.state.aiResults.forEach((hit) => {\n                const hitElement = this._createHitElement(hit, query);\n                this.aiHitsList.appendChild(hitElement);\n            });\n        } else {\n            this.aiResultsSection.classList.add(\"hidden\");\n        }\n\n        // Render Normal Results\n        if (this.state.normalResults.length > 0) {\n            this.normalResultsSection.classList.remove(\"hidden\"); // Ensure section is visible\n            this.state.normalResults.forEach((hit) => {\n                const hitElement = this._createHitElement(hit, query);\n                this.normalHitsList.appendChild(hitElement);\n            });\n        } else {\n            // Optionally hide the \"Keyword Matches\" section if AI is enabled and has results, but normal doesn't\n            // if (this.config.enableAiSearch && this.state.aiResults.length > 0) {\n            //     this.normalResultsSection.classList.add('hidden');\n            // } else {\n            this.normalResultsSection.classList.remove(\"hidden\"); // Default: keep visible if it's the only potential section\n            // }\n        }\n\n        // Update selection state (important after re-rendering)\n        this.updateSelectedResult();\n    }\n\n    /**\n     * Creates a single hit element (<li>) for the results list.\n     * @param {object} hit - The MeiliSearch hit object.\n     * @param {string} query - The current search query for highlighting.\n     * @returns {HTMLElement} The created list item element.\n     * @private\n     */\n    _createHitElement(hit, query) {\n        console.log(\"--- Processing Hit ---\", JSON.stringify(hit)); // DEBUG: Log the raw hit\n        const li = document.createElement(\"li\");\n        const visibility = hit.visibility || \"public\"; // Default to public if missing\n        console.log(\"Determined visibility:\", visibility); // DEBUG: Log determined visibility\n\n        // --- Helper for basic highlighting ---\n        const highlightText = (text, terms) => {\n            if (\n                !this.config.enableHighlighting ||\n                !terms ||\n                terms.length === 0 ||\n                !text\n            ) {\n                return text;\n            }\n            let highlightedText = text;\n            terms.forEach((term) => {\n                try {\n                    const escapedTerm = term.replace(\n                        /[.*+?^${}()|[\\]\\\\]/g,\n                        \"\\\\$&\"\n                    );\n                    const regex = new RegExp(`(${escapedTerm})`, \"gi\");\n                    highlightedText = highlightedText.replace(\n                        regex,\n                        \"<em>$1</em>\"\n                    );\n                } catch (e) {\n                    console.warn(\"Error highlighting term:\", term, e);\n                }\n            });\n            return highlightedText;\n        };\n\n        // --- Get query terms for basic highlighting ---\n        const queryTerms = query\n            ? query.split(/\\s+/).filter((w) => w.length >= 2)\n            : [];\n\n        // --- Create result link (common logic) ---\n        const link = document.createElement(\"a\");\n        if (hit.url) {\n            link.href = hit.url;\n        } else if (hit.slug) {\n            link.href = `/${hit.slug}`;\n        } else {\n            link.href = \"#\";\n            link.style.pointerEvents = \"none\";\n        }\n        link.classList.add(\"ms-result-link\");\n        link.addEventListener(\"click\", (e) => {\n            if (link.style.pointerEvents === \"none\") {\n                e.preventDefault();\n                return;\n            }\n            e.preventDefault();\n            this.close();\n            setTimeout(() => {\n                window.location.href = link.href;\n            }, 10);\n        });\n\n        // --- Create result item container (common logic) ---\n        const resultItem = document.createElement(\"div\");\n        resultItem.classList.add(\"ms-result-item\");\n\n        // --- Title ---\n        const title = document.createElement(\"h3\");\n        title.classList.add(\"ms-result-title\");\n        let titleContent = hit.title || \"Untitled\";\n\n        // --- Excerpt / Content ---\n        const excerpt = document.createElement(\"p\");\n        excerpt.classList.add(\"ms-result-excerpt\");\n        let excerptContent = \"\";\n\n        // --- Conditional Rendering based on Visibility ---\n        if (visibility === \"public\") {\n            // --- Public Post Rendering (Existing Logic) ---\n\n            // Title Highlighting (prefer _formatted)\n            const formattedTitle =\n                this.config.enableHighlighting &&\n                (hit._formatted?.title || hit._highlightResult?.title?.value);\n            if (formattedTitle) {\n                titleContent = formattedTitle;\n            } else {\n                // Fallback to basic highlight if _formatted not available\n                titleContent = highlightText(titleContent, queryTerms);\n            }\n\n            // Excerpt Snippet Calculation and Highlighting\n            let textContent = hit.plaintext || hit.excerpt || \"\";\n            if (query && this.config.enableHighlighting) {\n                const exactPhrase = this.extractTextBetweenQuotes(query);\n                const hasQuotes = query.startsWith('\"') && query.endsWith('\"');\n                const phraseToHighlight =\n                    exactPhrase || (hasQuotes ? query.slice(1, -1) : null);\n                const wordsToHighlight = phraseToHighlight\n                    ? []\n                    : queryTerms.sort((a, b) => b.length - a.length);\n\n                let firstMatchPos = -1;\n                let matchLength = 0;\n                const lowerTextContent = textContent.toLowerCase();\n\n                if (phraseToHighlight) {\n                    const lowerPhrase = phraseToHighlight.toLowerCase();\n                    const pos = lowerTextContent.indexOf(lowerPhrase);\n                    if (pos !== -1) {\n                        firstMatchPos = pos;\n                        matchLength = phraseToHighlight.length;\n                    }\n                } else {\n                    for (const word of wordsToHighlight) {\n                        const lowerWord = word.toLowerCase();\n                        const pos = lowerTextContent.indexOf(lowerWord);\n                        if (\n                            pos !== -1 &&\n                            (firstMatchPos === -1 || pos < firstMatchPos)\n                        ) {\n                            firstMatchPos = pos;\n                            matchLength = word.length;\n                        }\n                    }\n                }\n\n                let tempExcerpt = \"\";\n                if (firstMatchPos !== -1) {\n                    const snippetRadius = 60;\n                    const startPos = Math.max(0, firstMatchPos - snippetRadius);\n                    const endPos = Math.min(\n                        textContent.length,\n                        firstMatchPos + matchLength + snippetRadius\n                    );\n                    tempExcerpt = textContent.substring(startPos, endPos);\n                    if (startPos > 0) tempExcerpt = \"...\" + tempExcerpt;\n                    if (endPos < textContent.length)\n                        tempExcerpt = tempExcerpt + \"...\";\n                } else {\n                    tempExcerpt =\n                        textContent.substring(0, 150) +\n                        (textContent.length > 150 ? \"...\" : \"\");\n                }\n\n                excerptContent = tempExcerpt;\n                const termsToHighlight = phraseToHighlight\n                    ? [phraseToHighlight]\n                    : wordsToHighlight;\n                excerptContent = highlightText(\n                    excerptContent,\n                    termsToHighlight\n                ); // Use helper\n            } else {\n                // Highlighting disabled or no query, use truncated content\n                excerptContent =\n                    textContent.substring(0, 150) +\n                    (textContent.length > 150 ? \"...\" : \"\");\n            }\n        } else {\n            // --- Non-Public Post Rendering (Simpler Logic) ---\n            titleContent = hit.title || \"Untitled\";\n            // Use raw excerpt, fallback to truncated plaintext\n            // Use raw excerpt only, default to empty string if missing\n            excerptContent = hit.excerpt || \"\";\n\n            // Apply basic highlighting\n            titleContent = highlightText(titleContent, queryTerms);\n            // excerptContent = highlightText(excerptContent, queryTerms); // Skip highlighting excerpt for non-public\n        }\n        console.log(\n            \"Final excerptContent before setting HTML:\",\n            excerptContent\n        ); // DEBUG: Log final excerpt content\n        // --- Set content (common logic) ---\n        title.innerHTML = titleContent;\n        excerpt.innerHTML = excerptContent;\n        excerpt.innerHTML = excerptContent;\n\n        // --- Append elements (common logic) ---\n        resultItem.appendChild(title);\n        resultItem.appendChild(excerpt);\n        link.appendChild(resultItem);\n        li.appendChild(link);\n\n        return li;\n    }\n} // End of GhostMeilisearchSearch class\n\n// Initialize search if configuration is available\nif (window.__MS_SEARCH_CONFIG__) {\n    window.ghostMeilisearchSearch = new GhostMeilisearchSearch(\n        window.__MS_SEARCH_CONFIG__\n    );\n}\n\n// Add a utility method to help with initialization\nGhostMeilisearchSearch.initialize = function (config) {\n    if (!window.ghostMeilisearchSearch) {\n        window.ghostMeilisearchSearch = new GhostMeilisearchSearch(config);\n    }\n    return window.ghostMeilisearchSearch;\n};\n\nexport default GhostMeilisearchSearch;\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}